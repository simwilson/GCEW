
GCEW_Glove.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  0000108c  00001120  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000108c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800142  00800142  00001162  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001162  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00001200  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001866  00000000  00000000  00001378  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e8b  00000000  00000000  00002bde  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b1b  00000000  00000000  00003a69  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002bc  00000000  00000000  00004584  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000900  00000000  00000000  00004840  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000564  00000000  00000000  00005140  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  000056a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 be 01 	jmp	0x37c	; 0x37c <__vector_5>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 d3 01 	jmp	0x3a6	; 0x3a6 <__vector_14>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      6c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      70:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      74:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      78:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      7c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      80:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      84:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      88:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      8c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      90:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      94:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      98:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      9c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      ac:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      b0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	ec e8       	ldi	r30, 0x8C	; 140
     1ca:	f0 e1       	ldi	r31, 0x10	; 16
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a2 34       	cpi	r26, 0x42	; 66
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	a2 e4       	ldi	r26, 0x42	; 66
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	a9 34       	cpi	r26, 0x49	; 73
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <main>
     1ec:	0c 94 44 08 	jmp	0x1088	; 0x1088 <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     1f4:	0e 94 3c 02 	call	0x478	; 0x478 <system_init>
     1f8:	08 95       	ret

000001fa <registerSetup>:
#include <compiler.h>


void registerSetup(void){ // Setup necessary registers for Timer 0, can store other register setup lines here as well
	
	PRR0 &= ~(_BV(PRTIM0)); // Clearing Power Reduction Timer 0 Bit to allow enable of Timer 0
     1fa:	e4 e6       	ldi	r30, 0x64	; 100
     1fc:	f0 e0       	ldi	r31, 0x00	; 0
     1fe:	80 81       	ld	r24, Z
     200:	8f 7d       	andi	r24, 0xDF	; 223
     202:	80 83       	st	Z, r24
	
	 //TIMSK0 |= (_BV(OCIE0A)); // Enable Timer 0 Compare Match A Interrupt
	
	TCCR0B |= (_BV(CS00));  // The three CS0 bits are used to set the Timer 0 Prescaler, in this case : 1024
     204:	85 b5       	in	r24, 0x25	; 37
     206:	81 60       	ori	r24, 0x01	; 1
     208:	85 bd       	out	0x25, r24	; 37
	TCCR0B &= ~(_BV(CS01));
     20a:	85 b5       	in	r24, 0x25	; 37
     20c:	8d 7f       	andi	r24, 0xFD	; 253
     20e:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= (_BV(CS02));
     210:	85 b5       	in	r24, 0x25	; 37
     212:	84 60       	ori	r24, 0x04	; 4
     214:	85 bd       	out	0x25, r24	; 37
	TCCR0B &= ~(_BV(WGM02));  // To enable CTC (Clear Timer on Compare Match : pg 140 in datasheet) Mode for Timer 0
     216:	85 b5       	in	r24, 0x25	; 37
     218:	87 7f       	andi	r24, 0xF7	; 247
     21a:	85 bd       	out	0x25, r24	; 37

	TCCR0A &= ~(_BV(WGM00));  // To enable CTC Mode for Timer 0
     21c:	84 b5       	in	r24, 0x24	; 36
     21e:	8e 7f       	andi	r24, 0xFE	; 254
     220:	84 bd       	out	0x24, r24	; 36
	TCCR0A |= (_BV(WGM01));   // To enable CTC Mode for Timer 0
     222:	84 b5       	in	r24, 0x24	; 36
     224:	82 60       	ori	r24, 0x02	; 2
     226:	84 bd       	out	0x24, r24	; 36
	TCCR0A &= ~(_BV(COM0A0)); // To set normal port operation on OC0A Pin
     228:	84 b5       	in	r24, 0x24	; 36
     22a:	8f 7b       	andi	r24, 0xBF	; 191
     22c:	84 bd       	out	0x24, r24	; 36
	TCCR0A &= ~(_BV(COM0A1)); // To set normal port operation on OC0A Pin
     22e:	84 b5       	in	r24, 0x24	; 36
     230:	8f 77       	andi	r24, 0x7F	; 127
     232:	84 bd       	out	0x24, r24	; 36
	TCCR0A &= ~(_BV(COM0B0)); // To set normal port operation on OC0B Pin
     234:	84 b5       	in	r24, 0x24	; 36
     236:	8f 7e       	andi	r24, 0xEF	; 239
     238:	84 bd       	out	0x24, r24	; 36
	TCCR0A &= ~(_BV(COM0B1)); // To set normal port operation on OC0B Pin
     23a:	84 b5       	in	r24, 0x24	; 36
     23c:	8f 7d       	andi	r24, 0xDF	; 223
     23e:	84 bd       	out	0x24, r24	; 36

	OCR0A = 255; // Timer 0 compare match #, choose a range between 0-255 to adjust interrupt frequency
     240:	8f ef       	ldi	r24, 0xFF	; 255
     242:	87 bd       	out	0x27, r24	; 39
     244:	08 95       	ret

00000246 <USART0_Print>:
}


void USART0_Print(const char* variable){ // Function to write a string to USART0
     246:	ef 92       	push	r14
     248:	ff 92       	push	r15
     24a:	0f 93       	push	r16
     24c:	1f 93       	push	r17
     24e:	cf 93       	push	r28
     250:	df 93       	push	r29
     252:	8c 01       	movw	r16, r24
     254:	7c 01       	movw	r14, r24
	
	for (int i=0; i<strlen(variable); i++) // Loops to print character array pointed to by received string
     256:	c0 e0       	ldi	r28, 0x00	; 0
     258:	d0 e0       	ldi	r29, 0x00	; 0
     25a:	06 c0       	rjmp	.+12     	; 0x268 <USART0_Print+0x22>
	{
		USART_0_write(variable[i]);
     25c:	f7 01       	movw	r30, r14
     25e:	81 91       	ld	r24, Z+
     260:	7f 01       	movw	r14, r30
     262:	0e 94 93 02 	call	0x526	; 0x526 <USART_0_write>
}


void USART0_Print(const char* variable){ // Function to write a string to USART0
	
	for (int i=0; i<strlen(variable); i++) // Loops to print character array pointed to by received string
     266:	21 96       	adiw	r28, 0x01	; 1
     268:	f8 01       	movw	r30, r16
     26a:	01 90       	ld	r0, Z+
     26c:	00 20       	and	r0, r0
     26e:	e9 f7       	brne	.-6      	; 0x26a <USART0_Print+0x24>
     270:	31 97       	sbiw	r30, 0x01	; 1
     272:	e0 1b       	sub	r30, r16
     274:	f1 0b       	sbc	r31, r17
     276:	ce 17       	cp	r28, r30
     278:	df 07       	cpc	r29, r31
     27a:	80 f3       	brcs	.-32     	; 0x25c <USART0_Print+0x16>
	{
		USART_0_write(variable[i]);
	}
}
     27c:	df 91       	pop	r29
     27e:	cf 91       	pop	r28
     280:	1f 91       	pop	r17
     282:	0f 91       	pop	r16
     284:	ff 90       	pop	r15
     286:	ef 90       	pop	r14
     288:	08 95       	ret

0000028a <USART0_Println>:

void USART0_Println(const char* variable){ // Function to write a string to USART0, ends with a new line
     28a:	ef 92       	push	r14
     28c:	ff 92       	push	r15
     28e:	0f 93       	push	r16
     290:	1f 93       	push	r17
     292:	cf 93       	push	r28
     294:	df 93       	push	r29
     296:	8c 01       	movw	r16, r24
     298:	7c 01       	movw	r14, r24
	
	for (int i=0; i<strlen(variable); i++) // Loops to print character array pointed to by received string
     29a:	c0 e0       	ldi	r28, 0x00	; 0
     29c:	d0 e0       	ldi	r29, 0x00	; 0
     29e:	06 c0       	rjmp	.+12     	; 0x2ac <USART0_Println+0x22>
	{
		USART_0_write(variable[i]);
     2a0:	f7 01       	movw	r30, r14
     2a2:	81 91       	ld	r24, Z+
     2a4:	7f 01       	movw	r14, r30
     2a6:	0e 94 93 02 	call	0x526	; 0x526 <USART_0_write>
	}
}

void USART0_Println(const char* variable){ // Function to write a string to USART0, ends with a new line
	
	for (int i=0; i<strlen(variable); i++) // Loops to print character array pointed to by received string
     2aa:	21 96       	adiw	r28, 0x01	; 1
     2ac:	f8 01       	movw	r30, r16
     2ae:	01 90       	ld	r0, Z+
     2b0:	00 20       	and	r0, r0
     2b2:	e9 f7       	brne	.-6      	; 0x2ae <USART0_Println+0x24>
     2b4:	31 97       	sbiw	r30, 0x01	; 1
     2b6:	e0 1b       	sub	r30, r16
     2b8:	f1 0b       	sbc	r31, r17
     2ba:	ce 17       	cp	r28, r30
     2bc:	df 07       	cpc	r29, r31
     2be:	80 f3       	brcs	.-32     	; 0x2a0 <USART0_Println+0x16>
	{
		USART_0_write(variable[i]);
	}
	USART_0_write(10); //  new line after finish printing string
     2c0:	8a e0       	ldi	r24, 0x0A	; 10
     2c2:	0e 94 93 02 	call	0x526	; 0x526 <USART_0_write>
}
     2c6:	df 91       	pop	r29
     2c8:	cf 91       	pop	r28
     2ca:	1f 91       	pop	r17
     2cc:	0f 91       	pop	r16
     2ce:	ff 90       	pop	r15
     2d0:	ef 90       	pop	r14
     2d2:	08 95       	ret

000002d4 <main>:
volatile uint8_t incrementer = 0;



int main(void)
{	
     2d4:	cf 93       	push	r28
     2d6:	df 93       	push	r29
     2d8:	cd b7       	in	r28, 0x3d	; 61
     2da:	de b7       	in	r29, 0x3e	; 62
     2dc:	e2 97       	sbiw	r28, 0x32	; 50
     2de:	0f b6       	in	r0, 0x3f	; 63
     2e0:	f8 94       	cli
     2e2:	de bf       	out	0x3e, r29	; 62
     2e4:	0f be       	out	0x3f, r0	; 63
     2e6:	cd bf       	out	0x3d, r28	; 61
	uint16_t adcRead = 0;
	char temp_string[50];

	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     2e8:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <atmel_start_init>
	registerSetup();
     2ec:	0e 94 fd 00 	call	0x1fa	; 0x1fa <registerSetup>
	
	while (1) {
		_delay_ms(500);

		ADCSRA |= (1 << ADSC); // Set ADC Conversion Start Bit
     2f0:	0f 2e       	mov	r0, r31
     2f2:	fa e7       	ldi	r31, 0x7A	; 122
     2f4:	8f 2e       	mov	r8, r31
     2f6:	91 2c       	mov	r9, r1
     2f8:	f0 2d       	mov	r31, r0
		
		while ((ADCSRA & (1 << ADSC)) ) { } // wait for ADC conversion to complete

		adcRead=ADC;
     2fa:	0f 2e       	mov	r0, r31
     2fc:	f8 e7       	ldi	r31, 0x78	; 120
     2fe:	af 2e       	mov	r10, r31
     300:	b1 2c       	mov	r11, r1
     302:	f0 2d       	mov	r31, r0
		sprintf(temp_string,"%u",adcRead); // Convert 10-bit ADC value (unsigned 16-bit integer) to a string
     304:	0f 2e       	mov	r0, r31
     306:	fe e0       	ldi	r31, 0x0E	; 14
     308:	cf 2e       	mov	r12, r31
     30a:	f1 e0       	ldi	r31, 0x01	; 1
     30c:	df 2e       	mov	r13, r31
     30e:	f0 2d       	mov	r31, r0
     310:	ce 01       	movw	r24, r28
     312:	01 96       	adiw	r24, 0x01	; 1
     314:	7c 01       	movw	r14, r24
		USART0_Print("ADC = ");
		USART0_Println(temp_string); // Call function to write string to USART0
		printf("incrementer = %d\n",incrementer);
     316:	08 e1       	ldi	r16, 0x18	; 24
     318:	11 e0       	ldi	r17, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     31a:	9f ef       	ldi	r25, 0xFF	; 255
     31c:	e4 e3       	ldi	r30, 0x34	; 52
     31e:	fc e0       	ldi	r31, 0x0C	; 12
     320:	91 50       	subi	r25, 0x01	; 1
     322:	e0 40       	sbci	r30, 0x00	; 0
     324:	f0 40       	sbci	r31, 0x00	; 0
     326:	e1 f7       	brne	.-8      	; 0x320 <main+0x4c>
     328:	00 c0       	rjmp	.+0      	; 0x32a <main+0x56>
     32a:	00 00       	nop
	registerSetup();
	
	while (1) {
		_delay_ms(500);

		ADCSRA |= (1 << ADSC); // Set ADC Conversion Start Bit
     32c:	f4 01       	movw	r30, r8
     32e:	80 81       	ld	r24, Z
     330:	80 64       	ori	r24, 0x40	; 64
     332:	80 83       	st	Z, r24
		
		while ((ADCSRA & (1 << ADSC)) ) { } // wait for ADC conversion to complete
     334:	f4 01       	movw	r30, r8
     336:	80 81       	ld	r24, Z
     338:	86 fd       	sbrc	r24, 6
     33a:	fc cf       	rjmp	.-8      	; 0x334 <main+0x60>

		adcRead=ADC;
     33c:	f5 01       	movw	r30, r10
     33e:	80 81       	ld	r24, Z
     340:	91 81       	ldd	r25, Z+1	; 0x01
		sprintf(temp_string,"%u",adcRead); // Convert 10-bit ADC value (unsigned 16-bit integer) to a string
     342:	9f 93       	push	r25
     344:	8f 93       	push	r24
     346:	df 92       	push	r13
     348:	cf 92       	push	r12
     34a:	ff 92       	push	r15
     34c:	ef 92       	push	r14
     34e:	0e 94 c4 07 	call	0xf88	; 0xf88 <sprintf>
		USART0_Print("ADC = ");
     352:	81 e1       	ldi	r24, 0x11	; 17
     354:	91 e0       	ldi	r25, 0x01	; 1
     356:	0e 94 23 01 	call	0x246	; 0x246 <USART0_Print>
		USART0_Println(temp_string); // Call function to write string to USART0
     35a:	c7 01       	movw	r24, r14
     35c:	0e 94 45 01 	call	0x28a	; 0x28a <USART0_Println>
		printf("incrementer = %d\n",incrementer);
     360:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
     364:	1f 92       	push	r1
     366:	8f 93       	push	r24
     368:	1f 93       	push	r17
     36a:	0f 93       	push	r16
     36c:	0e 94 7e 07 	call	0xefc	; 0xefc <printf>
		}
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	f8 94       	cli
     374:	de bf       	out	0x3e, r29	; 62
     376:	0f be       	out	0x3f, r0	; 63
     378:	cd bf       	out	0x3d, r28	; 61
     37a:	cf cf       	rjmp	.-98     	; 0x31a <main+0x46>

0000037c <__vector_5>:
	*/



ISR(PCINT2_vect) // Interrupt Routine for INT0 ( Pin PD2) Interrupt
{
     37c:	1f 92       	push	r1
     37e:	0f 92       	push	r0
     380:	0f b6       	in	r0, 0x3f	; 63
     382:	0f 92       	push	r0
     384:	11 24       	eor	r1, r1
     386:	8f 93       	push	r24
     388:	ef 93       	push	r30
     38a:	ff 93       	push	r31
		TIMSK0 |= (_BV(OCIE0A)); // Enable Timer 0 Interrupt
     38c:	ee e6       	ldi	r30, 0x6E	; 110
     38e:	f0 e0       	ldi	r31, 0x00	; 0
     390:	80 81       	ld	r24, Z
     392:	82 60       	ori	r24, 0x02	; 2
     394:	80 83       	st	Z, r24
}
     396:	ff 91       	pop	r31
     398:	ef 91       	pop	r30
     39a:	8f 91       	pop	r24
     39c:	0f 90       	pop	r0
     39e:	0f be       	out	0x3f, r0	; 63
     3a0:	0f 90       	pop	r0
     3a2:	1f 90       	pop	r1
     3a4:	18 95       	reti

000003a6 <__vector_14>:


ISR(TIMER0_COMPA_vect) // Interrupt Routine for Timer 0 Compare Match A
{
     3a6:	1f 92       	push	r1
     3a8:	0f 92       	push	r0
     3aa:	0f b6       	in	r0, 0x3f	; 63
     3ac:	0f 92       	push	r0
     3ae:	11 24       	eor	r1, r1
     3b0:	2f 93       	push	r18
     3b2:	3f 93       	push	r19
     3b4:	4f 93       	push	r20
     3b6:	5f 93       	push	r21
     3b8:	6f 93       	push	r22
     3ba:	7f 93       	push	r23
     3bc:	8f 93       	push	r24
     3be:	9f 93       	push	r25
     3c0:	af 93       	push	r26
     3c2:	bf 93       	push	r27
     3c4:	ef 93       	push	r30
     3c6:	ff 93       	push	r31
	/* Timer 0 has a minimum frequency of (f_clock/(prescaler * (1+OCR0A)) which in this case = (8MHz/(1024*(1 + 255)) = 30.5Hz
	   this is too fast for a 'long press' of the pushbutton, so we allow the timer to interrupt 60 times (about 2 seconds) before polling the pushbutton pin to check if it is still
	   being pulled low   
	*/

	incrementer = incrementer + 1;
     3c8:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
     3cc:	8f 5f       	subi	r24, 0xFF	; 255
     3ce:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
	if (incrementer > 60) 
     3d2:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
     3d6:	8d 33       	cpi	r24, 0x3D	; 61
     3d8:	c8 f0       	brcs	.+50     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
	{
		if(PORTD_get_pin_level(PORTD2) < 1){ // If the pin is still being pulled low by the pushbutton
     3da:	4a 99       	sbic	0x09, 2	; 9
     3dc:	0c c0       	rjmp	.+24     	; 0x3f6 <__vector_14+0x50>
			printf("Long Press\n");
     3de:	8a e2       	ldi	r24, 0x2A	; 42
     3e0:	91 e0       	ldi	r25, 0x01	; 1
     3e2:	0e 94 94 07 	call	0xf28	; 0xf28 <puts>
			TIMSK0 &= ~(_BV(OCIE0A)); // Disable Timer 0 interrupt
     3e6:	ee e6       	ldi	r30, 0x6E	; 110
     3e8:	f0 e0       	ldi	r31, 0x00	; 0
     3ea:	80 81       	ld	r24, Z
     3ec:	8d 7f       	andi	r24, 0xFD	; 253
     3ee:	80 83       	st	Z, r24
			incrementer = 0;
     3f0:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <__data_end>
     3f4:	0b c0       	rjmp	.+22     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
		}
		else{
			printf("Short Press\n");
     3f6:	85 e3       	ldi	r24, 0x35	; 53
     3f8:	91 e0       	ldi	r25, 0x01	; 1
     3fa:	0e 94 94 07 	call	0xf28	; 0xf28 <puts>
			TIMSK0 &= ~(_BV(OCIE0A)); // Disable Timer 0 interrupt
     3fe:	ee e6       	ldi	r30, 0x6E	; 110
     400:	f0 e0       	ldi	r31, 0x00	; 0
     402:	80 81       	ld	r24, Z
     404:	8d 7f       	andi	r24, 0xFD	; 253
     406:	80 83       	st	Z, r24
			incrementer = 0;
     408:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <__data_end>
		}
	}
	else{ }  // don't do anything if the incrementer hasn't reached its desired value
	
     40c:	ff 91       	pop	r31
     40e:	ef 91       	pop	r30
     410:	bf 91       	pop	r27
     412:	af 91       	pop	r26
     414:	9f 91       	pop	r25
     416:	8f 91       	pop	r24
     418:	7f 91       	pop	r23
     41a:	6f 91       	pop	r22
     41c:	5f 91       	pop	r21
     41e:	4f 91       	pop	r20
     420:	3f 91       	pop	r19
     422:	2f 91       	pop	r18
     424:	0f 90       	pop	r0
     426:	0f be       	out	0x3f, r0	; 63
     428:	0f 90       	pop	r0
     42a:	1f 90       	pop	r1
     42c:	18 95       	reti

0000042e <ADC_init>:
 */
int8_t ADC_init()
{

	/* Enable clock to write ADC registers */
	PRR0 &= ~(1 << PRADC);
     42e:	e4 e6       	ldi	r30, 0x64	; 100
     430:	f0 e0       	ldi	r31, 0x00	; 0
     432:	80 81       	ld	r24, Z
     434:	8e 7f       	andi	r24, 0xFE	; 254
     436:	80 83       	st	Z, r24

	ADMUX = (0x01 << REFS0)   /* AVCC with external capacitor at AREF pin */
     438:	82 e4       	ldi	r24, 0x42	; 66
     43a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	        | (0 << ADLAR)    /* Left Adjust Result: disabled */
	        | (0x02 << MUX0); /* ADC Single Ended Input pin 2 (Pin PC2) */

	ADCSRA = (1 << ADEN)        /* ADC: enabled */
     43e:	86 e8       	ldi	r24, 0x86	; 134
     440:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	         | (0 << ADATE)     /* Auto Trigger: disabled */
	         | (0 << ADIE)      /* ADC Interrupt: disabled */
	         | (0x06 << ADPS0); /* 64 */
	ADCSRB = (0x00 << ADTS0)    /* Free Running mode */
     444:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
	         | (0 << ACME)      /* Analog Comparator Multiplexer: disabled */
	    ;

	DIDR0 = 1 << ADC2D    /* Disable digital input buffer for ADC2 */
     448:	8c e1       	ldi	r24, 0x1C	; 28
     44a:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
	        | 1 << ADC3D  /* Disable digital input buffer for ADC3 */
	        | 1 << ADC4D; /* Disable digital input buffer for ADC4 */

	return 0;
}
     44e:	80 e0       	ldi	r24, 0x00	; 0
     450:	08 95       	ret

00000452 <EXTERNAL_IRQ_0_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     452:	57 98       	cbi	0x0a, 7	; 10
static inline void PORTD_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{

	if (pull_mode == PORT_PULL_UP) {

		DDRD &= ~(1 << pin);
     454:	57 98       	cbi	0x0a, 7	; 10

		PORTD |= 1 << pin;
     456:	5f 9a       	sbi	0x0b, 7	; 11
	    // <id> pad_pull_config
	    // <PORT_PULL_OFF"> Off
	    // <PORT_PULL_UP"> Pull-up
	    PORT_PULL_UP);

	EXTERNAL_IRQ_0_init();
     458:	0e 94 65 02 	call	0x4ca	; 0x4ca <EXTERNAL_IRQ_0_init>
     45c:	08 95       	ret

0000045e <ADC_initialization>:
		DDRC &= ~(1 << pin);

		PORTC |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTC &= ~(1 << pin);
     45e:	42 98       	cbi	0x08, 2	; 8
     460:	43 98       	cbi	0x08, 3	; 8
     462:	44 98       	cbi	0x08, 4	; 8
	Flex2_set_pull_mode(PORT_PULL_OFF);

	// Disable pull-up.
	Flex3_set_pull_mode(PORT_PULL_OFF);

	ADC_init();
     464:	0e 94 17 02 	call	0x42e	; 0x42e <ADC_init>
     468:	08 95       	ret

0000046a <USART_0_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     46a:	50 98       	cbi	0x0a, 0	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     46c:	58 98       	cbi	0x0b, 0	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     46e:	51 9a       	sbi	0x0a, 1	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     470:	59 98       	cbi	0x0b, 1	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
     472:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <USART_0_init>
     476:	08 95       	ret

00000478 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR1 = (1 << PRTWI1) | (1 << PRTIM4) | (1 << PRSPI1) | (1 << PRPTC) | (1 << PRTIM3);
     478:	8d e3       	ldi	r24, 0x3D	; 61
     47a:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>

	PRR0 = (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI0) | (1 << PRUSART1) | (1 << PRUSART0)
     47e:	8f ef       	ldi	r24, 0xFF	; 255
     480:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     484:	94 b1       	in	r25, 0x04	; 4
     486:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     488:	95 b1       	in	r25, 0x05	; 5
     48a:	85 b9       	out	0x05, r24	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     48c:	97 b1       	in	r25, 0x07	; 7
     48e:	90 78       	andi	r25, 0x80	; 128
     490:	97 b9       	out	0x07, r25	; 7

		PORTC |= mask;
     492:	98 b1       	in	r25, 0x08	; 8
     494:	9f 67       	ori	r25, 0x7F	; 127
     496:	98 b9       	out	0x08, r25	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     498:	9a b1       	in	r25, 0x0a	; 10
     49a:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     49c:	9b b1       	in	r25, 0x0b	; 11
     49e:	8b b9       	out	0x0b, r24	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
     4a0:	8d b1       	in	r24, 0x0d	; 13
     4a2:	80 7f       	andi	r24, 0xF0	; 240
     4a4:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
     4a6:	8e b1       	in	r24, 0x0e	; 14
     4a8:	8f 60       	ori	r24, 0x0F	; 15
     4aa:	8e b9       	out	0x0e, r24	; 14
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     4ac:	40 e0       	ldi	r20, 0x00	; 0
     4ae:	60 e8       	ldi	r22, 0x80	; 128
     4b0:	81 e6       	ldi	r24, 0x61	; 97
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	0e 94 75 02 	call	0x4ea	; 0x4ea <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     4b8:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     4ba:	15 be       	out	0x35, r1	; 53
{
	mcu_init();

	sysctrl_init();

	EXTERNAL_IRQ_0_initialization();
     4bc:	0e 94 29 02 	call	0x452	; 0x452 <EXTERNAL_IRQ_0_initialization>

	ADC_initialization();
     4c0:	0e 94 2f 02 	call	0x45e	; 0x45e <ADC_initialization>

	USART_0_initialization();
     4c4:	0e 94 35 02 	call	0x46a	; 0x46a <USART_0_initialization>
     4c8:	08 95       	ret

000004ca <EXTERNAL_IRQ_0_init>:
 */
int8_t EXTERNAL_IRQ_0_init()
{

	
	PCICR |= (_BV(PCIE2)); // Enable pin change interrupt 2
     4ca:	e8 e6       	ldi	r30, 0x68	; 104
     4cc:	f0 e0       	ldi	r31, 0x00	; 0
     4ce:	80 81       	ld	r24, Z
     4d0:	84 60       	ori	r24, 0x04	; 4
     4d2:	80 83       	st	Z, r24

	PCMSK2 = (_BV(PCINT18)); // Pin change enable mask 18
     4d4:	84 e0       	ldi	r24, 0x04	; 4
     4d6:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>

	EIMSK |= _BV(INT0);  // Enable interrupts on INT0 pin
     4da:	e8 9a       	sbi	0x1d, 0	; 29
	EIMSK &= ~(_BV(INT1)); // Disable Interrupts on INT1 pin
     4dc:	e9 98       	cbi	0x1d, 1	; 29

	EICRA = 0x03; // The rising edge of INT0 pin generates an interrupt (press of the button, falling edge is release of the button)
     4de:	83 e0       	ldi	r24, 0x03	; 3
     4e0:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>

	sei();
     4e4:	78 94       	sei
	return 0;
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	08 95       	ret

000004ea <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     4ea:	2f b7       	in	r18, 0x3f	; 63
	cli
     4ec:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     4ee:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     4f0:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     4f2:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     4f4:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     4f6:	08 95       	ret

000004f8 <USART_0_init>:
uint8_t USART_0_read()
{
	while (!(UCSR0A & (1 << RXC0)))
		;
	return UDR0;
}
     4f8:	e4 e6       	ldi	r30, 0x64	; 100
     4fa:	f0 e0       	ldi	r31, 0x00	; 0
     4fc:	80 81       	ld	r24, Z
     4fe:	8d 7f       	andi	r24, 0xFD	; 253
     500:	80 83       	st	Z, r24
     502:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     506:	8c e0       	ldi	r24, 0x0C	; 12
     508:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     50c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     510:	88 e9       	ldi	r24, 0x98	; 152
     512:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	91 e0       	ldi	r25, 0x01	; 1
     51a:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <__iob+0x3>
     51e:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <__iob+0x2>
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	08 95       	ret

00000526 <USART_0_write>:
 *
 * \return Nothing
 */
void USART_0_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE0)))
     526:	e0 ec       	ldi	r30, 0xC0	; 192
     528:	f0 e0       	ldi	r31, 0x00	; 0
     52a:	90 81       	ld	r25, Z
     52c:	95 ff       	sbrs	r25, 5
     52e:	fd cf       	rjmp	.-6      	; 0x52a <USART_0_write+0x4>
		;
	UDR0 = data;
     530:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     534:	08 95       	ret

00000536 <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
     536:	0e 94 93 02 	call	0x526	; 0x526 <USART_0_write>
	return 0;
}
     53a:	80 e0       	ldi	r24, 0x00	; 0
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	08 95       	ret

00000540 <vfprintf>:
     540:	a0 e1       	ldi	r26, 0x10	; 16
     542:	b0 e0       	ldi	r27, 0x00	; 0
     544:	e6 ea       	ldi	r30, 0xA6	; 166
     546:	f2 e0       	ldi	r31, 0x02	; 2
     548:	0c 94 1d 06 	jmp	0xc3a	; 0xc3a <__prologue_saves__>
     54c:	7c 01       	movw	r14, r24
     54e:	1b 01       	movw	r2, r22
     550:	6a 01       	movw	r12, r20
     552:	fc 01       	movw	r30, r24
     554:	17 82       	std	Z+7, r1	; 0x07
     556:	16 82       	std	Z+6, r1	; 0x06
     558:	83 81       	ldd	r24, Z+3	; 0x03
     55a:	81 ff       	sbrs	r24, 1
     55c:	44 c3       	rjmp	.+1672   	; 0xbe6 <__stack+0x2e7>
     55e:	9e 01       	movw	r18, r28
     560:	2f 5f       	subi	r18, 0xFF	; 255
     562:	3f 4f       	sbci	r19, 0xFF	; 255
     564:	39 01       	movw	r6, r18
     566:	f7 01       	movw	r30, r14
     568:	93 81       	ldd	r25, Z+3	; 0x03
     56a:	f1 01       	movw	r30, r2
     56c:	93 fd       	sbrc	r25, 3
     56e:	85 91       	lpm	r24, Z+
     570:	93 ff       	sbrs	r25, 3
     572:	81 91       	ld	r24, Z+
     574:	1f 01       	movw	r2, r30
     576:	88 23       	and	r24, r24
     578:	09 f4       	brne	.+2      	; 0x57c <vfprintf+0x3c>
     57a:	31 c3       	rjmp	.+1634   	; 0xbde <__stack+0x2df>
     57c:	85 32       	cpi	r24, 0x25	; 37
     57e:	39 f4       	brne	.+14     	; 0x58e <vfprintf+0x4e>
     580:	93 fd       	sbrc	r25, 3
     582:	85 91       	lpm	r24, Z+
     584:	93 ff       	sbrs	r25, 3
     586:	81 91       	ld	r24, Z+
     588:	1f 01       	movw	r2, r30
     58a:	85 32       	cpi	r24, 0x25	; 37
     58c:	39 f4       	brne	.+14     	; 0x59c <vfprintf+0x5c>
     58e:	b7 01       	movw	r22, r14
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     596:	56 01       	movw	r10, r12
     598:	65 01       	movw	r12, r10
     59a:	e5 cf       	rjmp	.-54     	; 0x566 <vfprintf+0x26>
     59c:	10 e0       	ldi	r17, 0x00	; 0
     59e:	51 2c       	mov	r5, r1
     5a0:	91 2c       	mov	r9, r1
     5a2:	ff e1       	ldi	r31, 0x1F	; 31
     5a4:	f9 15       	cp	r31, r9
     5a6:	d8 f0       	brcs	.+54     	; 0x5de <vfprintf+0x9e>
     5a8:	8b 32       	cpi	r24, 0x2B	; 43
     5aa:	79 f0       	breq	.+30     	; 0x5ca <vfprintf+0x8a>
     5ac:	38 f4       	brcc	.+14     	; 0x5bc <vfprintf+0x7c>
     5ae:	80 32       	cpi	r24, 0x20	; 32
     5b0:	79 f0       	breq	.+30     	; 0x5d0 <vfprintf+0x90>
     5b2:	83 32       	cpi	r24, 0x23	; 35
     5b4:	a1 f4       	brne	.+40     	; 0x5de <vfprintf+0x9e>
     5b6:	f9 2d       	mov	r31, r9
     5b8:	f0 61       	ori	r31, 0x10	; 16
     5ba:	2e c0       	rjmp	.+92     	; 0x618 <vfprintf+0xd8>
     5bc:	8d 32       	cpi	r24, 0x2D	; 45
     5be:	61 f0       	breq	.+24     	; 0x5d8 <vfprintf+0x98>
     5c0:	80 33       	cpi	r24, 0x30	; 48
     5c2:	69 f4       	brne	.+26     	; 0x5de <vfprintf+0x9e>
     5c4:	29 2d       	mov	r18, r9
     5c6:	21 60       	ori	r18, 0x01	; 1
     5c8:	2d c0       	rjmp	.+90     	; 0x624 <vfprintf+0xe4>
     5ca:	39 2d       	mov	r19, r9
     5cc:	32 60       	ori	r19, 0x02	; 2
     5ce:	93 2e       	mov	r9, r19
     5d0:	89 2d       	mov	r24, r9
     5d2:	84 60       	ori	r24, 0x04	; 4
     5d4:	98 2e       	mov	r9, r24
     5d6:	2a c0       	rjmp	.+84     	; 0x62c <vfprintf+0xec>
     5d8:	e9 2d       	mov	r30, r9
     5da:	e8 60       	ori	r30, 0x08	; 8
     5dc:	15 c0       	rjmp	.+42     	; 0x608 <vfprintf+0xc8>
     5de:	97 fc       	sbrc	r9, 7
     5e0:	2d c0       	rjmp	.+90     	; 0x63c <vfprintf+0xfc>
     5e2:	20 ed       	ldi	r18, 0xD0	; 208
     5e4:	28 0f       	add	r18, r24
     5e6:	2a 30       	cpi	r18, 0x0A	; 10
     5e8:	88 f4       	brcc	.+34     	; 0x60c <vfprintf+0xcc>
     5ea:	96 fe       	sbrs	r9, 6
     5ec:	06 c0       	rjmp	.+12     	; 0x5fa <vfprintf+0xba>
     5ee:	3a e0       	ldi	r19, 0x0A	; 10
     5f0:	13 9f       	mul	r17, r19
     5f2:	20 0d       	add	r18, r0
     5f4:	11 24       	eor	r1, r1
     5f6:	12 2f       	mov	r17, r18
     5f8:	19 c0       	rjmp	.+50     	; 0x62c <vfprintf+0xec>
     5fa:	8a e0       	ldi	r24, 0x0A	; 10
     5fc:	58 9e       	mul	r5, r24
     5fe:	20 0d       	add	r18, r0
     600:	11 24       	eor	r1, r1
     602:	52 2e       	mov	r5, r18
     604:	e9 2d       	mov	r30, r9
     606:	e0 62       	ori	r30, 0x20	; 32
     608:	9e 2e       	mov	r9, r30
     60a:	10 c0       	rjmp	.+32     	; 0x62c <vfprintf+0xec>
     60c:	8e 32       	cpi	r24, 0x2E	; 46
     60e:	31 f4       	brne	.+12     	; 0x61c <vfprintf+0xdc>
     610:	96 fc       	sbrc	r9, 6
     612:	e5 c2       	rjmp	.+1482   	; 0xbde <__stack+0x2df>
     614:	f9 2d       	mov	r31, r9
     616:	f0 64       	ori	r31, 0x40	; 64
     618:	9f 2e       	mov	r9, r31
     61a:	08 c0       	rjmp	.+16     	; 0x62c <vfprintf+0xec>
     61c:	8c 36       	cpi	r24, 0x6C	; 108
     61e:	21 f4       	brne	.+8      	; 0x628 <vfprintf+0xe8>
     620:	29 2d       	mov	r18, r9
     622:	20 68       	ori	r18, 0x80	; 128
     624:	92 2e       	mov	r9, r18
     626:	02 c0       	rjmp	.+4      	; 0x62c <vfprintf+0xec>
     628:	88 36       	cpi	r24, 0x68	; 104
     62a:	41 f4       	brne	.+16     	; 0x63c <vfprintf+0xfc>
     62c:	f1 01       	movw	r30, r2
     62e:	93 fd       	sbrc	r25, 3
     630:	85 91       	lpm	r24, Z+
     632:	93 ff       	sbrs	r25, 3
     634:	81 91       	ld	r24, Z+
     636:	1f 01       	movw	r2, r30
     638:	81 11       	cpse	r24, r1
     63a:	b3 cf       	rjmp	.-154    	; 0x5a2 <vfprintf+0x62>
     63c:	9b eb       	ldi	r25, 0xBB	; 187
     63e:	98 0f       	add	r25, r24
     640:	93 30       	cpi	r25, 0x03	; 3
     642:	20 f4       	brcc	.+8      	; 0x64c <vfprintf+0x10c>
     644:	99 2d       	mov	r25, r9
     646:	90 61       	ori	r25, 0x10	; 16
     648:	80 5e       	subi	r24, 0xE0	; 224
     64a:	07 c0       	rjmp	.+14     	; 0x65a <vfprintf+0x11a>
     64c:	9b e9       	ldi	r25, 0x9B	; 155
     64e:	98 0f       	add	r25, r24
     650:	93 30       	cpi	r25, 0x03	; 3
     652:	08 f0       	brcs	.+2      	; 0x656 <vfprintf+0x116>
     654:	66 c1       	rjmp	.+716    	; 0x922 <__stack+0x23>
     656:	99 2d       	mov	r25, r9
     658:	9f 7e       	andi	r25, 0xEF	; 239
     65a:	96 ff       	sbrs	r25, 6
     65c:	16 e0       	ldi	r17, 0x06	; 6
     65e:	9f 73       	andi	r25, 0x3F	; 63
     660:	99 2e       	mov	r9, r25
     662:	85 36       	cpi	r24, 0x65	; 101
     664:	19 f4       	brne	.+6      	; 0x66c <vfprintf+0x12c>
     666:	90 64       	ori	r25, 0x40	; 64
     668:	99 2e       	mov	r9, r25
     66a:	08 c0       	rjmp	.+16     	; 0x67c <vfprintf+0x13c>
     66c:	86 36       	cpi	r24, 0x66	; 102
     66e:	21 f4       	brne	.+8      	; 0x678 <vfprintf+0x138>
     670:	39 2f       	mov	r19, r25
     672:	30 68       	ori	r19, 0x80	; 128
     674:	93 2e       	mov	r9, r19
     676:	02 c0       	rjmp	.+4      	; 0x67c <vfprintf+0x13c>
     678:	11 11       	cpse	r17, r1
     67a:	11 50       	subi	r17, 0x01	; 1
     67c:	97 fe       	sbrs	r9, 7
     67e:	07 c0       	rjmp	.+14     	; 0x68e <vfprintf+0x14e>
     680:	1c 33       	cpi	r17, 0x3C	; 60
     682:	50 f4       	brcc	.+20     	; 0x698 <vfprintf+0x158>
     684:	44 24       	eor	r4, r4
     686:	43 94       	inc	r4
     688:	41 0e       	add	r4, r17
     68a:	27 e0       	ldi	r18, 0x07	; 7
     68c:	0b c0       	rjmp	.+22     	; 0x6a4 <vfprintf+0x164>
     68e:	18 30       	cpi	r17, 0x08	; 8
     690:	38 f0       	brcs	.+14     	; 0x6a0 <vfprintf+0x160>
     692:	27 e0       	ldi	r18, 0x07	; 7
     694:	17 e0       	ldi	r17, 0x07	; 7
     696:	05 c0       	rjmp	.+10     	; 0x6a2 <vfprintf+0x162>
     698:	27 e0       	ldi	r18, 0x07	; 7
     69a:	9c e3       	ldi	r25, 0x3C	; 60
     69c:	49 2e       	mov	r4, r25
     69e:	02 c0       	rjmp	.+4      	; 0x6a4 <vfprintf+0x164>
     6a0:	21 2f       	mov	r18, r17
     6a2:	41 2c       	mov	r4, r1
     6a4:	56 01       	movw	r10, r12
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	a8 0e       	add	r10, r24
     6aa:	b1 1c       	adc	r11, r1
     6ac:	f6 01       	movw	r30, r12
     6ae:	60 81       	ld	r22, Z
     6b0:	71 81       	ldd	r23, Z+1	; 0x01
     6b2:	82 81       	ldd	r24, Z+2	; 0x02
     6b4:	93 81       	ldd	r25, Z+3	; 0x03
     6b6:	04 2d       	mov	r16, r4
     6b8:	a3 01       	movw	r20, r6
     6ba:	0e 94 54 06 	call	0xca8	; 0xca8 <__ftoa_engine>
     6be:	6c 01       	movw	r12, r24
     6c0:	f9 81       	ldd	r31, Y+1	; 0x01
     6c2:	fc 87       	std	Y+12, r31	; 0x0c
     6c4:	f0 ff       	sbrs	r31, 0
     6c6:	02 c0       	rjmp	.+4      	; 0x6cc <vfprintf+0x18c>
     6c8:	f3 ff       	sbrs	r31, 3
     6ca:	06 c0       	rjmp	.+12     	; 0x6d8 <vfprintf+0x198>
     6cc:	91 fc       	sbrc	r9, 1
     6ce:	06 c0       	rjmp	.+12     	; 0x6dc <vfprintf+0x19c>
     6d0:	92 fe       	sbrs	r9, 2
     6d2:	06 c0       	rjmp	.+12     	; 0x6e0 <vfprintf+0x1a0>
     6d4:	00 e2       	ldi	r16, 0x20	; 32
     6d6:	05 c0       	rjmp	.+10     	; 0x6e2 <vfprintf+0x1a2>
     6d8:	0d e2       	ldi	r16, 0x2D	; 45
     6da:	03 c0       	rjmp	.+6      	; 0x6e2 <vfprintf+0x1a2>
     6dc:	0b e2       	ldi	r16, 0x2B	; 43
     6de:	01 c0       	rjmp	.+2      	; 0x6e2 <vfprintf+0x1a2>
     6e0:	00 e0       	ldi	r16, 0x00	; 0
     6e2:	8c 85       	ldd	r24, Y+12	; 0x0c
     6e4:	8c 70       	andi	r24, 0x0C	; 12
     6e6:	19 f0       	breq	.+6      	; 0x6ee <vfprintf+0x1ae>
     6e8:	01 11       	cpse	r16, r1
     6ea:	5a c2       	rjmp	.+1204   	; 0xba0 <__stack+0x2a1>
     6ec:	9b c2       	rjmp	.+1334   	; 0xc24 <__stack+0x325>
     6ee:	97 fe       	sbrs	r9, 7
     6f0:	10 c0       	rjmp	.+32     	; 0x712 <vfprintf+0x1d2>
     6f2:	4c 0c       	add	r4, r12
     6f4:	fc 85       	ldd	r31, Y+12	; 0x0c
     6f6:	f4 ff       	sbrs	r31, 4
     6f8:	04 c0       	rjmp	.+8      	; 0x702 <vfprintf+0x1c2>
     6fa:	8a 81       	ldd	r24, Y+2	; 0x02
     6fc:	81 33       	cpi	r24, 0x31	; 49
     6fe:	09 f4       	brne	.+2      	; 0x702 <vfprintf+0x1c2>
     700:	4a 94       	dec	r4
     702:	14 14       	cp	r1, r4
     704:	74 f5       	brge	.+92     	; 0x762 <vfprintf+0x222>
     706:	28 e0       	ldi	r18, 0x08	; 8
     708:	24 15       	cp	r18, r4
     70a:	78 f5       	brcc	.+94     	; 0x76a <vfprintf+0x22a>
     70c:	88 e0       	ldi	r24, 0x08	; 8
     70e:	48 2e       	mov	r4, r24
     710:	2c c0       	rjmp	.+88     	; 0x76a <vfprintf+0x22a>
     712:	96 fc       	sbrc	r9, 6
     714:	2a c0       	rjmp	.+84     	; 0x76a <vfprintf+0x22a>
     716:	81 2f       	mov	r24, r17
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	8c 15       	cp	r24, r12
     71c:	9d 05       	cpc	r25, r13
     71e:	9c f0       	brlt	.+38     	; 0x746 <vfprintf+0x206>
     720:	3c ef       	ldi	r19, 0xFC	; 252
     722:	c3 16       	cp	r12, r19
     724:	3f ef       	ldi	r19, 0xFF	; 255
     726:	d3 06       	cpc	r13, r19
     728:	74 f0       	brlt	.+28     	; 0x746 <vfprintf+0x206>
     72a:	89 2d       	mov	r24, r9
     72c:	80 68       	ori	r24, 0x80	; 128
     72e:	98 2e       	mov	r9, r24
     730:	0a c0       	rjmp	.+20     	; 0x746 <vfprintf+0x206>
     732:	e2 e0       	ldi	r30, 0x02	; 2
     734:	f0 e0       	ldi	r31, 0x00	; 0
     736:	ec 0f       	add	r30, r28
     738:	fd 1f       	adc	r31, r29
     73a:	e1 0f       	add	r30, r17
     73c:	f1 1d       	adc	r31, r1
     73e:	80 81       	ld	r24, Z
     740:	80 33       	cpi	r24, 0x30	; 48
     742:	19 f4       	brne	.+6      	; 0x74a <vfprintf+0x20a>
     744:	11 50       	subi	r17, 0x01	; 1
     746:	11 11       	cpse	r17, r1
     748:	f4 cf       	rjmp	.-24     	; 0x732 <vfprintf+0x1f2>
     74a:	97 fe       	sbrs	r9, 7
     74c:	0e c0       	rjmp	.+28     	; 0x76a <vfprintf+0x22a>
     74e:	44 24       	eor	r4, r4
     750:	43 94       	inc	r4
     752:	41 0e       	add	r4, r17
     754:	81 2f       	mov	r24, r17
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	c8 16       	cp	r12, r24
     75a:	d9 06       	cpc	r13, r25
     75c:	2c f4       	brge	.+10     	; 0x768 <vfprintf+0x228>
     75e:	1c 19       	sub	r17, r12
     760:	04 c0       	rjmp	.+8      	; 0x76a <vfprintf+0x22a>
     762:	44 24       	eor	r4, r4
     764:	43 94       	inc	r4
     766:	01 c0       	rjmp	.+2      	; 0x76a <vfprintf+0x22a>
     768:	10 e0       	ldi	r17, 0x00	; 0
     76a:	97 fe       	sbrs	r9, 7
     76c:	06 c0       	rjmp	.+12     	; 0x77a <vfprintf+0x23a>
     76e:	1c 14       	cp	r1, r12
     770:	1d 04       	cpc	r1, r13
     772:	34 f4       	brge	.+12     	; 0x780 <vfprintf+0x240>
     774:	c6 01       	movw	r24, r12
     776:	01 96       	adiw	r24, 0x01	; 1
     778:	05 c0       	rjmp	.+10     	; 0x784 <vfprintf+0x244>
     77a:	85 e0       	ldi	r24, 0x05	; 5
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	02 c0       	rjmp	.+4      	; 0x784 <vfprintf+0x244>
     780:	81 e0       	ldi	r24, 0x01	; 1
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	01 11       	cpse	r16, r1
     786:	01 96       	adiw	r24, 0x01	; 1
     788:	11 23       	and	r17, r17
     78a:	31 f0       	breq	.+12     	; 0x798 <vfprintf+0x258>
     78c:	21 2f       	mov	r18, r17
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	2f 5f       	subi	r18, 0xFF	; 255
     792:	3f 4f       	sbci	r19, 0xFF	; 255
     794:	82 0f       	add	r24, r18
     796:	93 1f       	adc	r25, r19
     798:	25 2d       	mov	r18, r5
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	82 17       	cp	r24, r18
     79e:	93 07       	cpc	r25, r19
     7a0:	14 f4       	brge	.+4      	; 0x7a6 <vfprintf+0x266>
     7a2:	58 1a       	sub	r5, r24
     7a4:	01 c0       	rjmp	.+2      	; 0x7a8 <vfprintf+0x268>
     7a6:	51 2c       	mov	r5, r1
     7a8:	89 2d       	mov	r24, r9
     7aa:	89 70       	andi	r24, 0x09	; 9
     7ac:	49 f4       	brne	.+18     	; 0x7c0 <vfprintf+0x280>
     7ae:	55 20       	and	r5, r5
     7b0:	39 f0       	breq	.+14     	; 0x7c0 <vfprintf+0x280>
     7b2:	b7 01       	movw	r22, r14
     7b4:	80 e2       	ldi	r24, 0x20	; 32
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     7bc:	5a 94       	dec	r5
     7be:	f7 cf       	rjmp	.-18     	; 0x7ae <vfprintf+0x26e>
     7c0:	00 23       	and	r16, r16
     7c2:	29 f0       	breq	.+10     	; 0x7ce <vfprintf+0x28e>
     7c4:	b7 01       	movw	r22, r14
     7c6:	80 2f       	mov	r24, r16
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     7ce:	93 fc       	sbrc	r9, 3
     7d0:	09 c0       	rjmp	.+18     	; 0x7e4 <vfprintf+0x2a4>
     7d2:	55 20       	and	r5, r5
     7d4:	39 f0       	breq	.+14     	; 0x7e4 <vfprintf+0x2a4>
     7d6:	b7 01       	movw	r22, r14
     7d8:	80 e3       	ldi	r24, 0x30	; 48
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     7e0:	5a 94       	dec	r5
     7e2:	f7 cf       	rjmp	.-18     	; 0x7d2 <vfprintf+0x292>
     7e4:	97 fe       	sbrs	r9, 7
     7e6:	4c c0       	rjmp	.+152    	; 0x880 <vfprintf+0x340>
     7e8:	46 01       	movw	r8, r12
     7ea:	d7 fe       	sbrs	r13, 7
     7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <vfprintf+0x2b2>
     7ee:	81 2c       	mov	r8, r1
     7f0:	91 2c       	mov	r9, r1
     7f2:	c6 01       	movw	r24, r12
     7f4:	88 19       	sub	r24, r8
     7f6:	99 09       	sbc	r25, r9
     7f8:	f3 01       	movw	r30, r6
     7fa:	e8 0f       	add	r30, r24
     7fc:	f9 1f       	adc	r31, r25
     7fe:	fe 87       	std	Y+14, r31	; 0x0e
     800:	ed 87       	std	Y+13, r30	; 0x0d
     802:	96 01       	movw	r18, r12
     804:	24 19       	sub	r18, r4
     806:	31 09       	sbc	r19, r1
     808:	38 8b       	std	Y+16, r19	; 0x10
     80a:	2f 87       	std	Y+15, r18	; 0x0f
     80c:	01 2f       	mov	r16, r17
     80e:	10 e0       	ldi	r17, 0x00	; 0
     810:	11 95       	neg	r17
     812:	01 95       	neg	r16
     814:	11 09       	sbc	r17, r1
     816:	3f ef       	ldi	r19, 0xFF	; 255
     818:	83 16       	cp	r8, r19
     81a:	93 06       	cpc	r9, r19
     81c:	29 f4       	brne	.+10     	; 0x828 <vfprintf+0x2e8>
     81e:	b7 01       	movw	r22, r14
     820:	8e e2       	ldi	r24, 0x2E	; 46
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     828:	c8 14       	cp	r12, r8
     82a:	d9 04       	cpc	r13, r9
     82c:	4c f0       	brlt	.+18     	; 0x840 <vfprintf+0x300>
     82e:	8f 85       	ldd	r24, Y+15	; 0x0f
     830:	98 89       	ldd	r25, Y+16	; 0x10
     832:	88 15       	cp	r24, r8
     834:	99 05       	cpc	r25, r9
     836:	24 f4       	brge	.+8      	; 0x840 <vfprintf+0x300>
     838:	ed 85       	ldd	r30, Y+13	; 0x0d
     83a:	fe 85       	ldd	r31, Y+14	; 0x0e
     83c:	81 81       	ldd	r24, Z+1	; 0x01
     83e:	01 c0       	rjmp	.+2      	; 0x842 <vfprintf+0x302>
     840:	80 e3       	ldi	r24, 0x30	; 48
     842:	f1 e0       	ldi	r31, 0x01	; 1
     844:	8f 1a       	sub	r8, r31
     846:	91 08       	sbc	r9, r1
     848:	2d 85       	ldd	r18, Y+13	; 0x0d
     84a:	3e 85       	ldd	r19, Y+14	; 0x0e
     84c:	2f 5f       	subi	r18, 0xFF	; 255
     84e:	3f 4f       	sbci	r19, 0xFF	; 255
     850:	3e 87       	std	Y+14, r19	; 0x0e
     852:	2d 87       	std	Y+13, r18	; 0x0d
     854:	80 16       	cp	r8, r16
     856:	91 06       	cpc	r9, r17
     858:	2c f0       	brlt	.+10     	; 0x864 <vfprintf+0x324>
     85a:	b7 01       	movw	r22, r14
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     862:	d9 cf       	rjmp	.-78     	; 0x816 <vfprintf+0x2d6>
     864:	c8 14       	cp	r12, r8
     866:	d9 04       	cpc	r13, r9
     868:	41 f4       	brne	.+16     	; 0x87a <vfprintf+0x33a>
     86a:	9a 81       	ldd	r25, Y+2	; 0x02
     86c:	96 33       	cpi	r25, 0x36	; 54
     86e:	20 f4       	brcc	.+8      	; 0x878 <vfprintf+0x338>
     870:	95 33       	cpi	r25, 0x35	; 53
     872:	19 f4       	brne	.+6      	; 0x87a <vfprintf+0x33a>
     874:	3c 85       	ldd	r19, Y+12	; 0x0c
     876:	34 ff       	sbrs	r19, 4
     878:	81 e3       	ldi	r24, 0x31	; 49
     87a:	b7 01       	movw	r22, r14
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	4e c0       	rjmp	.+156    	; 0x91c <__stack+0x1d>
     880:	8a 81       	ldd	r24, Y+2	; 0x02
     882:	81 33       	cpi	r24, 0x31	; 49
     884:	19 f0       	breq	.+6      	; 0x88c <vfprintf+0x34c>
     886:	9c 85       	ldd	r25, Y+12	; 0x0c
     888:	9f 7e       	andi	r25, 0xEF	; 239
     88a:	9c 87       	std	Y+12, r25	; 0x0c
     88c:	b7 01       	movw	r22, r14
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     894:	11 11       	cpse	r17, r1
     896:	05 c0       	rjmp	.+10     	; 0x8a2 <vfprintf+0x362>
     898:	94 fc       	sbrc	r9, 4
     89a:	18 c0       	rjmp	.+48     	; 0x8cc <vfprintf+0x38c>
     89c:	85 e6       	ldi	r24, 0x65	; 101
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	17 c0       	rjmp	.+46     	; 0x8d0 <vfprintf+0x390>
     8a2:	b7 01       	movw	r22, r14
     8a4:	8e e2       	ldi	r24, 0x2E	; 46
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     8ac:	1e 5f       	subi	r17, 0xFE	; 254
     8ae:	82 e0       	ldi	r24, 0x02	; 2
     8b0:	01 e0       	ldi	r16, 0x01	; 1
     8b2:	08 0f       	add	r16, r24
     8b4:	f3 01       	movw	r30, r6
     8b6:	e8 0f       	add	r30, r24
     8b8:	f1 1d       	adc	r31, r1
     8ba:	80 81       	ld	r24, Z
     8bc:	b7 01       	movw	r22, r14
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     8c4:	80 2f       	mov	r24, r16
     8c6:	01 13       	cpse	r16, r17
     8c8:	f3 cf       	rjmp	.-26     	; 0x8b0 <vfprintf+0x370>
     8ca:	e6 cf       	rjmp	.-52     	; 0x898 <vfprintf+0x358>
     8cc:	85 e4       	ldi	r24, 0x45	; 69
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	b7 01       	movw	r22, r14
     8d2:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     8d6:	d7 fc       	sbrc	r13, 7
     8d8:	06 c0       	rjmp	.+12     	; 0x8e6 <vfprintf+0x3a6>
     8da:	c1 14       	cp	r12, r1
     8dc:	d1 04       	cpc	r13, r1
     8de:	41 f4       	brne	.+16     	; 0x8f0 <vfprintf+0x3b0>
     8e0:	ec 85       	ldd	r30, Y+12	; 0x0c
     8e2:	e4 ff       	sbrs	r30, 4
     8e4:	05 c0       	rjmp	.+10     	; 0x8f0 <vfprintf+0x3b0>
     8e6:	d1 94       	neg	r13
     8e8:	c1 94       	neg	r12
     8ea:	d1 08       	sbc	r13, r1
     8ec:	8d e2       	ldi	r24, 0x2D	; 45
     8ee:	01 c0       	rjmp	.+2      	; 0x8f2 <vfprintf+0x3b2>
     8f0:	8b e2       	ldi	r24, 0x2B	; 43
     8f2:	b7 01       	movw	r22, r14
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     8fa:	80 e3       	ldi	r24, 0x30	; 48
     8fc:	2a e0       	ldi	r18, 0x0A	; 10
     8fe:	c2 16       	cp	r12, r18
     900:	d1 04       	cpc	r13, r1
     902:	2c f0       	brlt	.+10     	; 0x90e <__stack+0xf>
     904:	8f 5f       	subi	r24, 0xFF	; 255
     906:	fa e0       	ldi	r31, 0x0A	; 10
     908:	cf 1a       	sub	r12, r31
     90a:	d1 08       	sbc	r13, r1
     90c:	f7 cf       	rjmp	.-18     	; 0x8fc <vfprintf+0x3bc>
     90e:	b7 01       	movw	r22, r14
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     916:	b7 01       	movw	r22, r14
     918:	c6 01       	movw	r24, r12
     91a:	c0 96       	adiw	r24, 0x30	; 48
     91c:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     920:	54 c1       	rjmp	.+680    	; 0xbca <__stack+0x2cb>
     922:	83 36       	cpi	r24, 0x63	; 99
     924:	31 f0       	breq	.+12     	; 0x932 <__stack+0x33>
     926:	83 37       	cpi	r24, 0x73	; 115
     928:	79 f0       	breq	.+30     	; 0x948 <__stack+0x49>
     92a:	83 35       	cpi	r24, 0x53	; 83
     92c:	09 f0       	breq	.+2      	; 0x930 <__stack+0x31>
     92e:	56 c0       	rjmp	.+172    	; 0x9dc <__stack+0xdd>
     930:	20 c0       	rjmp	.+64     	; 0x972 <__stack+0x73>
     932:	56 01       	movw	r10, r12
     934:	32 e0       	ldi	r19, 0x02	; 2
     936:	a3 0e       	add	r10, r19
     938:	b1 1c       	adc	r11, r1
     93a:	f6 01       	movw	r30, r12
     93c:	80 81       	ld	r24, Z
     93e:	89 83       	std	Y+1, r24	; 0x01
     940:	01 e0       	ldi	r16, 0x01	; 1
     942:	10 e0       	ldi	r17, 0x00	; 0
     944:	63 01       	movw	r12, r6
     946:	12 c0       	rjmp	.+36     	; 0x96c <__stack+0x6d>
     948:	56 01       	movw	r10, r12
     94a:	f2 e0       	ldi	r31, 0x02	; 2
     94c:	af 0e       	add	r10, r31
     94e:	b1 1c       	adc	r11, r1
     950:	f6 01       	movw	r30, r12
     952:	c0 80       	ld	r12, Z
     954:	d1 80       	ldd	r13, Z+1	; 0x01
     956:	96 fe       	sbrs	r9, 6
     958:	03 c0       	rjmp	.+6      	; 0x960 <__stack+0x61>
     95a:	61 2f       	mov	r22, r17
     95c:	70 e0       	ldi	r23, 0x00	; 0
     95e:	02 c0       	rjmp	.+4      	; 0x964 <__stack+0x65>
     960:	6f ef       	ldi	r22, 0xFF	; 255
     962:	7f ef       	ldi	r23, 0xFF	; 255
     964:	c6 01       	movw	r24, r12
     966:	0e 94 37 07 	call	0xe6e	; 0xe6e <strnlen>
     96a:	8c 01       	movw	r16, r24
     96c:	f9 2d       	mov	r31, r9
     96e:	ff 77       	andi	r31, 0x7F	; 127
     970:	14 c0       	rjmp	.+40     	; 0x99a <__stack+0x9b>
     972:	56 01       	movw	r10, r12
     974:	22 e0       	ldi	r18, 0x02	; 2
     976:	a2 0e       	add	r10, r18
     978:	b1 1c       	adc	r11, r1
     97a:	f6 01       	movw	r30, r12
     97c:	c0 80       	ld	r12, Z
     97e:	d1 80       	ldd	r13, Z+1	; 0x01
     980:	96 fe       	sbrs	r9, 6
     982:	03 c0       	rjmp	.+6      	; 0x98a <__stack+0x8b>
     984:	61 2f       	mov	r22, r17
     986:	70 e0       	ldi	r23, 0x00	; 0
     988:	02 c0       	rjmp	.+4      	; 0x98e <__stack+0x8f>
     98a:	6f ef       	ldi	r22, 0xFF	; 255
     98c:	7f ef       	ldi	r23, 0xFF	; 255
     98e:	c6 01       	movw	r24, r12
     990:	0e 94 2c 07 	call	0xe58	; 0xe58 <strnlen_P>
     994:	8c 01       	movw	r16, r24
     996:	f9 2d       	mov	r31, r9
     998:	f0 68       	ori	r31, 0x80	; 128
     99a:	9f 2e       	mov	r9, r31
     99c:	f3 fd       	sbrc	r31, 3
     99e:	1a c0       	rjmp	.+52     	; 0x9d4 <__stack+0xd5>
     9a0:	85 2d       	mov	r24, r5
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	08 17       	cp	r16, r24
     9a6:	19 07       	cpc	r17, r25
     9a8:	a8 f4       	brcc	.+42     	; 0x9d4 <__stack+0xd5>
     9aa:	b7 01       	movw	r22, r14
     9ac:	80 e2       	ldi	r24, 0x20	; 32
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     9b4:	5a 94       	dec	r5
     9b6:	f4 cf       	rjmp	.-24     	; 0x9a0 <__stack+0xa1>
     9b8:	f6 01       	movw	r30, r12
     9ba:	97 fc       	sbrc	r9, 7
     9bc:	85 91       	lpm	r24, Z+
     9be:	97 fe       	sbrs	r9, 7
     9c0:	81 91       	ld	r24, Z+
     9c2:	6f 01       	movw	r12, r30
     9c4:	b7 01       	movw	r22, r14
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     9cc:	51 10       	cpse	r5, r1
     9ce:	5a 94       	dec	r5
     9d0:	01 50       	subi	r16, 0x01	; 1
     9d2:	11 09       	sbc	r17, r1
     9d4:	01 15       	cp	r16, r1
     9d6:	11 05       	cpc	r17, r1
     9d8:	79 f7       	brne	.-34     	; 0x9b8 <__stack+0xb9>
     9da:	f7 c0       	rjmp	.+494    	; 0xbca <__stack+0x2cb>
     9dc:	84 36       	cpi	r24, 0x64	; 100
     9de:	11 f0       	breq	.+4      	; 0x9e4 <__stack+0xe5>
     9e0:	89 36       	cpi	r24, 0x69	; 105
     9e2:	61 f5       	brne	.+88     	; 0xa3c <__stack+0x13d>
     9e4:	56 01       	movw	r10, r12
     9e6:	97 fe       	sbrs	r9, 7
     9e8:	09 c0       	rjmp	.+18     	; 0x9fc <__stack+0xfd>
     9ea:	24 e0       	ldi	r18, 0x04	; 4
     9ec:	a2 0e       	add	r10, r18
     9ee:	b1 1c       	adc	r11, r1
     9f0:	f6 01       	movw	r30, r12
     9f2:	60 81       	ld	r22, Z
     9f4:	71 81       	ldd	r23, Z+1	; 0x01
     9f6:	82 81       	ldd	r24, Z+2	; 0x02
     9f8:	93 81       	ldd	r25, Z+3	; 0x03
     9fa:	0a c0       	rjmp	.+20     	; 0xa10 <__stack+0x111>
     9fc:	f2 e0       	ldi	r31, 0x02	; 2
     9fe:	af 0e       	add	r10, r31
     a00:	b1 1c       	adc	r11, r1
     a02:	f6 01       	movw	r30, r12
     a04:	60 81       	ld	r22, Z
     a06:	71 81       	ldd	r23, Z+1	; 0x01
     a08:	07 2e       	mov	r0, r23
     a0a:	00 0c       	add	r0, r0
     a0c:	88 0b       	sbc	r24, r24
     a0e:	99 0b       	sbc	r25, r25
     a10:	f9 2d       	mov	r31, r9
     a12:	ff 76       	andi	r31, 0x6F	; 111
     a14:	9f 2e       	mov	r9, r31
     a16:	97 ff       	sbrs	r25, 7
     a18:	09 c0       	rjmp	.+18     	; 0xa2c <__stack+0x12d>
     a1a:	90 95       	com	r25
     a1c:	80 95       	com	r24
     a1e:	70 95       	com	r23
     a20:	61 95       	neg	r22
     a22:	7f 4f       	sbci	r23, 0xFF	; 255
     a24:	8f 4f       	sbci	r24, 0xFF	; 255
     a26:	9f 4f       	sbci	r25, 0xFF	; 255
     a28:	f0 68       	ori	r31, 0x80	; 128
     a2a:	9f 2e       	mov	r9, r31
     a2c:	2a e0       	ldi	r18, 0x0A	; 10
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	a3 01       	movw	r20, r6
     a32:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__ultoa_invert>
     a36:	c8 2e       	mov	r12, r24
     a38:	c6 18       	sub	r12, r6
     a3a:	3f c0       	rjmp	.+126    	; 0xaba <__stack+0x1bb>
     a3c:	09 2d       	mov	r16, r9
     a3e:	85 37       	cpi	r24, 0x75	; 117
     a40:	21 f4       	brne	.+8      	; 0xa4a <__stack+0x14b>
     a42:	0f 7e       	andi	r16, 0xEF	; 239
     a44:	2a e0       	ldi	r18, 0x0A	; 10
     a46:	30 e0       	ldi	r19, 0x00	; 0
     a48:	1d c0       	rjmp	.+58     	; 0xa84 <__stack+0x185>
     a4a:	09 7f       	andi	r16, 0xF9	; 249
     a4c:	8f 36       	cpi	r24, 0x6F	; 111
     a4e:	91 f0       	breq	.+36     	; 0xa74 <__stack+0x175>
     a50:	18 f4       	brcc	.+6      	; 0xa58 <__stack+0x159>
     a52:	88 35       	cpi	r24, 0x58	; 88
     a54:	59 f0       	breq	.+22     	; 0xa6c <__stack+0x16d>
     a56:	c3 c0       	rjmp	.+390    	; 0xbde <__stack+0x2df>
     a58:	80 37       	cpi	r24, 0x70	; 112
     a5a:	19 f0       	breq	.+6      	; 0xa62 <__stack+0x163>
     a5c:	88 37       	cpi	r24, 0x78	; 120
     a5e:	11 f0       	breq	.+4      	; 0xa64 <__stack+0x165>
     a60:	be c0       	rjmp	.+380    	; 0xbde <__stack+0x2df>
     a62:	00 61       	ori	r16, 0x10	; 16
     a64:	04 ff       	sbrs	r16, 4
     a66:	09 c0       	rjmp	.+18     	; 0xa7a <__stack+0x17b>
     a68:	04 60       	ori	r16, 0x04	; 4
     a6a:	07 c0       	rjmp	.+14     	; 0xa7a <__stack+0x17b>
     a6c:	94 fe       	sbrs	r9, 4
     a6e:	08 c0       	rjmp	.+16     	; 0xa80 <__stack+0x181>
     a70:	06 60       	ori	r16, 0x06	; 6
     a72:	06 c0       	rjmp	.+12     	; 0xa80 <__stack+0x181>
     a74:	28 e0       	ldi	r18, 0x08	; 8
     a76:	30 e0       	ldi	r19, 0x00	; 0
     a78:	05 c0       	rjmp	.+10     	; 0xa84 <__stack+0x185>
     a7a:	20 e1       	ldi	r18, 0x10	; 16
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	02 c0       	rjmp	.+4      	; 0xa84 <__stack+0x185>
     a80:	20 e1       	ldi	r18, 0x10	; 16
     a82:	32 e0       	ldi	r19, 0x02	; 2
     a84:	56 01       	movw	r10, r12
     a86:	07 ff       	sbrs	r16, 7
     a88:	09 c0       	rjmp	.+18     	; 0xa9c <__stack+0x19d>
     a8a:	84 e0       	ldi	r24, 0x04	; 4
     a8c:	a8 0e       	add	r10, r24
     a8e:	b1 1c       	adc	r11, r1
     a90:	f6 01       	movw	r30, r12
     a92:	60 81       	ld	r22, Z
     a94:	71 81       	ldd	r23, Z+1	; 0x01
     a96:	82 81       	ldd	r24, Z+2	; 0x02
     a98:	93 81       	ldd	r25, Z+3	; 0x03
     a9a:	08 c0       	rjmp	.+16     	; 0xaac <__stack+0x1ad>
     a9c:	f2 e0       	ldi	r31, 0x02	; 2
     a9e:	af 0e       	add	r10, r31
     aa0:	b1 1c       	adc	r11, r1
     aa2:	f6 01       	movw	r30, r12
     aa4:	60 81       	ld	r22, Z
     aa6:	71 81       	ldd	r23, Z+1	; 0x01
     aa8:	80 e0       	ldi	r24, 0x00	; 0
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	a3 01       	movw	r20, r6
     aae:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__ultoa_invert>
     ab2:	c8 2e       	mov	r12, r24
     ab4:	c6 18       	sub	r12, r6
     ab6:	0f 77       	andi	r16, 0x7F	; 127
     ab8:	90 2e       	mov	r9, r16
     aba:	96 fe       	sbrs	r9, 6
     abc:	0b c0       	rjmp	.+22     	; 0xad4 <__stack+0x1d5>
     abe:	09 2d       	mov	r16, r9
     ac0:	0e 7f       	andi	r16, 0xFE	; 254
     ac2:	c1 16       	cp	r12, r17
     ac4:	50 f4       	brcc	.+20     	; 0xada <__stack+0x1db>
     ac6:	94 fe       	sbrs	r9, 4
     ac8:	0a c0       	rjmp	.+20     	; 0xade <__stack+0x1df>
     aca:	92 fc       	sbrc	r9, 2
     acc:	08 c0       	rjmp	.+16     	; 0xade <__stack+0x1df>
     ace:	09 2d       	mov	r16, r9
     ad0:	0e 7e       	andi	r16, 0xEE	; 238
     ad2:	05 c0       	rjmp	.+10     	; 0xade <__stack+0x1df>
     ad4:	dc 2c       	mov	r13, r12
     ad6:	09 2d       	mov	r16, r9
     ad8:	03 c0       	rjmp	.+6      	; 0xae0 <__stack+0x1e1>
     ada:	dc 2c       	mov	r13, r12
     adc:	01 c0       	rjmp	.+2      	; 0xae0 <__stack+0x1e1>
     ade:	d1 2e       	mov	r13, r17
     ae0:	04 ff       	sbrs	r16, 4
     ae2:	0d c0       	rjmp	.+26     	; 0xafe <__stack+0x1ff>
     ae4:	fe 01       	movw	r30, r28
     ae6:	ec 0d       	add	r30, r12
     ae8:	f1 1d       	adc	r31, r1
     aea:	80 81       	ld	r24, Z
     aec:	80 33       	cpi	r24, 0x30	; 48
     aee:	11 f4       	brne	.+4      	; 0xaf4 <__stack+0x1f5>
     af0:	09 7e       	andi	r16, 0xE9	; 233
     af2:	09 c0       	rjmp	.+18     	; 0xb06 <__stack+0x207>
     af4:	02 ff       	sbrs	r16, 2
     af6:	06 c0       	rjmp	.+12     	; 0xb04 <__stack+0x205>
     af8:	d3 94       	inc	r13
     afa:	d3 94       	inc	r13
     afc:	04 c0       	rjmp	.+8      	; 0xb06 <__stack+0x207>
     afe:	80 2f       	mov	r24, r16
     b00:	86 78       	andi	r24, 0x86	; 134
     b02:	09 f0       	breq	.+2      	; 0xb06 <__stack+0x207>
     b04:	d3 94       	inc	r13
     b06:	03 fd       	sbrc	r16, 3
     b08:	11 c0       	rjmp	.+34     	; 0xb2c <__stack+0x22d>
     b0a:	00 ff       	sbrs	r16, 0
     b0c:	06 c0       	rjmp	.+12     	; 0xb1a <__stack+0x21b>
     b0e:	1c 2d       	mov	r17, r12
     b10:	d5 14       	cp	r13, r5
     b12:	80 f4       	brcc	.+32     	; 0xb34 <__stack+0x235>
     b14:	15 0d       	add	r17, r5
     b16:	1d 19       	sub	r17, r13
     b18:	0d c0       	rjmp	.+26     	; 0xb34 <__stack+0x235>
     b1a:	d5 14       	cp	r13, r5
     b1c:	58 f4       	brcc	.+22     	; 0xb34 <__stack+0x235>
     b1e:	b7 01       	movw	r22, r14
     b20:	80 e2       	ldi	r24, 0x20	; 32
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     b28:	d3 94       	inc	r13
     b2a:	f7 cf       	rjmp	.-18     	; 0xb1a <__stack+0x21b>
     b2c:	d5 14       	cp	r13, r5
     b2e:	10 f4       	brcc	.+4      	; 0xb34 <__stack+0x235>
     b30:	5d 18       	sub	r5, r13
     b32:	01 c0       	rjmp	.+2      	; 0xb36 <__stack+0x237>
     b34:	51 2c       	mov	r5, r1
     b36:	04 ff       	sbrs	r16, 4
     b38:	10 c0       	rjmp	.+32     	; 0xb5a <__stack+0x25b>
     b3a:	b7 01       	movw	r22, r14
     b3c:	80 e3       	ldi	r24, 0x30	; 48
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     b44:	02 ff       	sbrs	r16, 2
     b46:	17 c0       	rjmp	.+46     	; 0xb76 <__stack+0x277>
     b48:	01 fd       	sbrc	r16, 1
     b4a:	03 c0       	rjmp	.+6      	; 0xb52 <__stack+0x253>
     b4c:	88 e7       	ldi	r24, 0x78	; 120
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	02 c0       	rjmp	.+4      	; 0xb56 <__stack+0x257>
     b52:	88 e5       	ldi	r24, 0x58	; 88
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	b7 01       	movw	r22, r14
     b58:	0c c0       	rjmp	.+24     	; 0xb72 <__stack+0x273>
     b5a:	80 2f       	mov	r24, r16
     b5c:	86 78       	andi	r24, 0x86	; 134
     b5e:	59 f0       	breq	.+22     	; 0xb76 <__stack+0x277>
     b60:	01 ff       	sbrs	r16, 1
     b62:	02 c0       	rjmp	.+4      	; 0xb68 <__stack+0x269>
     b64:	8b e2       	ldi	r24, 0x2B	; 43
     b66:	01 c0       	rjmp	.+2      	; 0xb6a <__stack+0x26b>
     b68:	80 e2       	ldi	r24, 0x20	; 32
     b6a:	07 fd       	sbrc	r16, 7
     b6c:	8d e2       	ldi	r24, 0x2D	; 45
     b6e:	b7 01       	movw	r22, r14
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     b76:	c1 16       	cp	r12, r17
     b78:	38 f4       	brcc	.+14     	; 0xb88 <__stack+0x289>
     b7a:	b7 01       	movw	r22, r14
     b7c:	80 e3       	ldi	r24, 0x30	; 48
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     b84:	11 50       	subi	r17, 0x01	; 1
     b86:	f7 cf       	rjmp	.-18     	; 0xb76 <__stack+0x277>
     b88:	ca 94       	dec	r12
     b8a:	f3 01       	movw	r30, r6
     b8c:	ec 0d       	add	r30, r12
     b8e:	f1 1d       	adc	r31, r1
     b90:	80 81       	ld	r24, Z
     b92:	b7 01       	movw	r22, r14
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     b9a:	c1 10       	cpse	r12, r1
     b9c:	f5 cf       	rjmp	.-22     	; 0xb88 <__stack+0x289>
     b9e:	15 c0       	rjmp	.+42     	; 0xbca <__stack+0x2cb>
     ba0:	f4 e0       	ldi	r31, 0x04	; 4
     ba2:	f5 15       	cp	r31, r5
     ba4:	60 f5       	brcc	.+88     	; 0xbfe <__stack+0x2ff>
     ba6:	84 e0       	ldi	r24, 0x04	; 4
     ba8:	58 1a       	sub	r5, r24
     baa:	93 fe       	sbrs	r9, 3
     bac:	1f c0       	rjmp	.+62     	; 0xbec <__stack+0x2ed>
     bae:	01 11       	cpse	r16, r1
     bb0:	27 c0       	rjmp	.+78     	; 0xc00 <__stack+0x301>
     bb2:	2c 85       	ldd	r18, Y+12	; 0x0c
     bb4:	23 ff       	sbrs	r18, 3
     bb6:	2a c0       	rjmp	.+84     	; 0xc0c <__stack+0x30d>
     bb8:	04 eb       	ldi	r16, 0xB4	; 180
     bba:	10 e0       	ldi	r17, 0x00	; 0
     bbc:	39 2d       	mov	r19, r9
     bbe:	30 71       	andi	r19, 0x10	; 16
     bc0:	93 2e       	mov	r9, r19
     bc2:	f8 01       	movw	r30, r16
     bc4:	84 91       	lpm	r24, Z
     bc6:	81 11       	cpse	r24, r1
     bc8:	24 c0       	rjmp	.+72     	; 0xc12 <__stack+0x313>
     bca:	55 20       	and	r5, r5
     bcc:	09 f4       	brne	.+2      	; 0xbd0 <__stack+0x2d1>
     bce:	e4 cc       	rjmp	.-1592   	; 0x598 <vfprintf+0x58>
     bd0:	b7 01       	movw	r22, r14
     bd2:	80 e2       	ldi	r24, 0x20	; 32
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     bda:	5a 94       	dec	r5
     bdc:	f6 cf       	rjmp	.-20     	; 0xbca <__stack+0x2cb>
     bde:	f7 01       	movw	r30, r14
     be0:	86 81       	ldd	r24, Z+6	; 0x06
     be2:	97 81       	ldd	r25, Z+7	; 0x07
     be4:	26 c0       	rjmp	.+76     	; 0xc32 <__stack+0x333>
     be6:	8f ef       	ldi	r24, 0xFF	; 255
     be8:	9f ef       	ldi	r25, 0xFF	; 255
     bea:	23 c0       	rjmp	.+70     	; 0xc32 <__stack+0x333>
     bec:	b7 01       	movw	r22, r14
     bee:	80 e2       	ldi	r24, 0x20	; 32
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     bf6:	5a 94       	dec	r5
     bf8:	51 10       	cpse	r5, r1
     bfa:	f8 cf       	rjmp	.-16     	; 0xbec <__stack+0x2ed>
     bfc:	d8 cf       	rjmp	.-80     	; 0xbae <__stack+0x2af>
     bfe:	51 2c       	mov	r5, r1
     c00:	b7 01       	movw	r22, r14
     c02:	80 2f       	mov	r24, r16
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     c0a:	d3 cf       	rjmp	.-90     	; 0xbb2 <__stack+0x2b3>
     c0c:	08 eb       	ldi	r16, 0xB8	; 184
     c0e:	10 e0       	ldi	r17, 0x00	; 0
     c10:	d5 cf       	rjmp	.-86     	; 0xbbc <__stack+0x2bd>
     c12:	91 10       	cpse	r9, r1
     c14:	80 52       	subi	r24, 0x20	; 32
     c16:	b7 01       	movw	r22, r14
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	0e 94 42 07 	call	0xe84	; 0xe84 <fputc>
     c1e:	0f 5f       	subi	r16, 0xFF	; 255
     c20:	1f 4f       	sbci	r17, 0xFF	; 255
     c22:	cf cf       	rjmp	.-98     	; 0xbc2 <__stack+0x2c3>
     c24:	23 e0       	ldi	r18, 0x03	; 3
     c26:	25 15       	cp	r18, r5
     c28:	10 f4       	brcc	.+4      	; 0xc2e <__stack+0x32f>
     c2a:	83 e0       	ldi	r24, 0x03	; 3
     c2c:	bd cf       	rjmp	.-134    	; 0xba8 <__stack+0x2a9>
     c2e:	51 2c       	mov	r5, r1
     c30:	c0 cf       	rjmp	.-128    	; 0xbb2 <__stack+0x2b3>
     c32:	60 96       	adiw	r28, 0x10	; 16
     c34:	e2 e1       	ldi	r30, 0x12	; 18
     c36:	0c 94 39 06 	jmp	0xc72	; 0xc72 <__epilogue_restores__>

00000c3a <__prologue_saves__>:
     c3a:	2f 92       	push	r2
     c3c:	3f 92       	push	r3
     c3e:	4f 92       	push	r4
     c40:	5f 92       	push	r5
     c42:	6f 92       	push	r6
     c44:	7f 92       	push	r7
     c46:	8f 92       	push	r8
     c48:	9f 92       	push	r9
     c4a:	af 92       	push	r10
     c4c:	bf 92       	push	r11
     c4e:	cf 92       	push	r12
     c50:	df 92       	push	r13
     c52:	ef 92       	push	r14
     c54:	ff 92       	push	r15
     c56:	0f 93       	push	r16
     c58:	1f 93       	push	r17
     c5a:	cf 93       	push	r28
     c5c:	df 93       	push	r29
     c5e:	cd b7       	in	r28, 0x3d	; 61
     c60:	de b7       	in	r29, 0x3e	; 62
     c62:	ca 1b       	sub	r28, r26
     c64:	db 0b       	sbc	r29, r27
     c66:	0f b6       	in	r0, 0x3f	; 63
     c68:	f8 94       	cli
     c6a:	de bf       	out	0x3e, r29	; 62
     c6c:	0f be       	out	0x3f, r0	; 63
     c6e:	cd bf       	out	0x3d, r28	; 61
     c70:	09 94       	ijmp

00000c72 <__epilogue_restores__>:
     c72:	2a 88       	ldd	r2, Y+18	; 0x12
     c74:	39 88       	ldd	r3, Y+17	; 0x11
     c76:	48 88       	ldd	r4, Y+16	; 0x10
     c78:	5f 84       	ldd	r5, Y+15	; 0x0f
     c7a:	6e 84       	ldd	r6, Y+14	; 0x0e
     c7c:	7d 84       	ldd	r7, Y+13	; 0x0d
     c7e:	8c 84       	ldd	r8, Y+12	; 0x0c
     c80:	9b 84       	ldd	r9, Y+11	; 0x0b
     c82:	aa 84       	ldd	r10, Y+10	; 0x0a
     c84:	b9 84       	ldd	r11, Y+9	; 0x09
     c86:	c8 84       	ldd	r12, Y+8	; 0x08
     c88:	df 80       	ldd	r13, Y+7	; 0x07
     c8a:	ee 80       	ldd	r14, Y+6	; 0x06
     c8c:	fd 80       	ldd	r15, Y+5	; 0x05
     c8e:	0c 81       	ldd	r16, Y+4	; 0x04
     c90:	1b 81       	ldd	r17, Y+3	; 0x03
     c92:	aa 81       	ldd	r26, Y+2	; 0x02
     c94:	b9 81       	ldd	r27, Y+1	; 0x01
     c96:	ce 0f       	add	r28, r30
     c98:	d1 1d       	adc	r29, r1
     c9a:	0f b6       	in	r0, 0x3f	; 63
     c9c:	f8 94       	cli
     c9e:	de bf       	out	0x3e, r29	; 62
     ca0:	0f be       	out	0x3f, r0	; 63
     ca2:	cd bf       	out	0x3d, r28	; 61
     ca4:	ed 01       	movw	r28, r26
     ca6:	08 95       	ret

00000ca8 <__ftoa_engine>:
     ca8:	28 30       	cpi	r18, 0x08	; 8
     caa:	08 f0       	brcs	.+2      	; 0xcae <__ftoa_engine+0x6>
     cac:	27 e0       	ldi	r18, 0x07	; 7
     cae:	33 27       	eor	r19, r19
     cb0:	da 01       	movw	r26, r20
     cb2:	99 0f       	add	r25, r25
     cb4:	31 1d       	adc	r19, r1
     cb6:	87 fd       	sbrc	r24, 7
     cb8:	91 60       	ori	r25, 0x01	; 1
     cba:	00 96       	adiw	r24, 0x00	; 0
     cbc:	61 05       	cpc	r22, r1
     cbe:	71 05       	cpc	r23, r1
     cc0:	39 f4       	brne	.+14     	; 0xcd0 <__ftoa_engine+0x28>
     cc2:	32 60       	ori	r19, 0x02	; 2
     cc4:	2e 5f       	subi	r18, 0xFE	; 254
     cc6:	3d 93       	st	X+, r19
     cc8:	30 e3       	ldi	r19, 0x30	; 48
     cca:	2a 95       	dec	r18
     ccc:	e1 f7       	brne	.-8      	; 0xcc6 <__ftoa_engine+0x1e>
     cce:	08 95       	ret
     cd0:	9f 3f       	cpi	r25, 0xFF	; 255
     cd2:	30 f0       	brcs	.+12     	; 0xce0 <__ftoa_engine+0x38>
     cd4:	80 38       	cpi	r24, 0x80	; 128
     cd6:	71 05       	cpc	r23, r1
     cd8:	61 05       	cpc	r22, r1
     cda:	09 f0       	breq	.+2      	; 0xcde <__ftoa_engine+0x36>
     cdc:	3c 5f       	subi	r19, 0xFC	; 252
     cde:	3c 5f       	subi	r19, 0xFC	; 252
     ce0:	3d 93       	st	X+, r19
     ce2:	91 30       	cpi	r25, 0x01	; 1
     ce4:	08 f0       	brcs	.+2      	; 0xce8 <__ftoa_engine+0x40>
     ce6:	80 68       	ori	r24, 0x80	; 128
     ce8:	91 1d       	adc	r25, r1
     cea:	df 93       	push	r29
     cec:	cf 93       	push	r28
     cee:	1f 93       	push	r17
     cf0:	0f 93       	push	r16
     cf2:	ff 92       	push	r15
     cf4:	ef 92       	push	r14
     cf6:	19 2f       	mov	r17, r25
     cf8:	98 7f       	andi	r25, 0xF8	; 248
     cfa:	96 95       	lsr	r25
     cfc:	e9 2f       	mov	r30, r25
     cfe:	96 95       	lsr	r25
     d00:	96 95       	lsr	r25
     d02:	e9 0f       	add	r30, r25
     d04:	ff 27       	eor	r31, r31
     d06:	ea 5e       	subi	r30, 0xEA	; 234
     d08:	fe 4f       	sbci	r31, 0xFE	; 254
     d0a:	99 27       	eor	r25, r25
     d0c:	33 27       	eor	r19, r19
     d0e:	ee 24       	eor	r14, r14
     d10:	ff 24       	eor	r15, r15
     d12:	a7 01       	movw	r20, r14
     d14:	e7 01       	movw	r28, r14
     d16:	05 90       	lpm	r0, Z+
     d18:	08 94       	sec
     d1a:	07 94       	ror	r0
     d1c:	28 f4       	brcc	.+10     	; 0xd28 <__ftoa_engine+0x80>
     d1e:	36 0f       	add	r19, r22
     d20:	e7 1e       	adc	r14, r23
     d22:	f8 1e       	adc	r15, r24
     d24:	49 1f       	adc	r20, r25
     d26:	51 1d       	adc	r21, r1
     d28:	66 0f       	add	r22, r22
     d2a:	77 1f       	adc	r23, r23
     d2c:	88 1f       	adc	r24, r24
     d2e:	99 1f       	adc	r25, r25
     d30:	06 94       	lsr	r0
     d32:	a1 f7       	brne	.-24     	; 0xd1c <__ftoa_engine+0x74>
     d34:	05 90       	lpm	r0, Z+
     d36:	07 94       	ror	r0
     d38:	28 f4       	brcc	.+10     	; 0xd44 <__ftoa_engine+0x9c>
     d3a:	e7 0e       	add	r14, r23
     d3c:	f8 1e       	adc	r15, r24
     d3e:	49 1f       	adc	r20, r25
     d40:	56 1f       	adc	r21, r22
     d42:	c1 1d       	adc	r28, r1
     d44:	77 0f       	add	r23, r23
     d46:	88 1f       	adc	r24, r24
     d48:	99 1f       	adc	r25, r25
     d4a:	66 1f       	adc	r22, r22
     d4c:	06 94       	lsr	r0
     d4e:	a1 f7       	brne	.-24     	; 0xd38 <__ftoa_engine+0x90>
     d50:	05 90       	lpm	r0, Z+
     d52:	07 94       	ror	r0
     d54:	28 f4       	brcc	.+10     	; 0xd60 <__ftoa_engine+0xb8>
     d56:	f8 0e       	add	r15, r24
     d58:	49 1f       	adc	r20, r25
     d5a:	56 1f       	adc	r21, r22
     d5c:	c7 1f       	adc	r28, r23
     d5e:	d1 1d       	adc	r29, r1
     d60:	88 0f       	add	r24, r24
     d62:	99 1f       	adc	r25, r25
     d64:	66 1f       	adc	r22, r22
     d66:	77 1f       	adc	r23, r23
     d68:	06 94       	lsr	r0
     d6a:	a1 f7       	brne	.-24     	; 0xd54 <__ftoa_engine+0xac>
     d6c:	05 90       	lpm	r0, Z+
     d6e:	07 94       	ror	r0
     d70:	20 f4       	brcc	.+8      	; 0xd7a <__ftoa_engine+0xd2>
     d72:	49 0f       	add	r20, r25
     d74:	56 1f       	adc	r21, r22
     d76:	c7 1f       	adc	r28, r23
     d78:	d8 1f       	adc	r29, r24
     d7a:	99 0f       	add	r25, r25
     d7c:	66 1f       	adc	r22, r22
     d7e:	77 1f       	adc	r23, r23
     d80:	88 1f       	adc	r24, r24
     d82:	06 94       	lsr	r0
     d84:	a9 f7       	brne	.-22     	; 0xd70 <__ftoa_engine+0xc8>
     d86:	84 91       	lpm	r24, Z
     d88:	10 95       	com	r17
     d8a:	17 70       	andi	r17, 0x07	; 7
     d8c:	41 f0       	breq	.+16     	; 0xd9e <__ftoa_engine+0xf6>
     d8e:	d6 95       	lsr	r29
     d90:	c7 95       	ror	r28
     d92:	57 95       	ror	r21
     d94:	47 95       	ror	r20
     d96:	f7 94       	ror	r15
     d98:	e7 94       	ror	r14
     d9a:	1a 95       	dec	r17
     d9c:	c1 f7       	brne	.-16     	; 0xd8e <__ftoa_engine+0xe6>
     d9e:	ec eb       	ldi	r30, 0xBC	; 188
     da0:	f0 e0       	ldi	r31, 0x00	; 0
     da2:	68 94       	set
     da4:	15 90       	lpm	r1, Z+
     da6:	15 91       	lpm	r17, Z+
     da8:	35 91       	lpm	r19, Z+
     daa:	65 91       	lpm	r22, Z+
     dac:	95 91       	lpm	r25, Z+
     dae:	05 90       	lpm	r0, Z+
     db0:	7f e2       	ldi	r23, 0x2F	; 47
     db2:	73 95       	inc	r23
     db4:	e1 18       	sub	r14, r1
     db6:	f1 0a       	sbc	r15, r17
     db8:	43 0b       	sbc	r20, r19
     dba:	56 0b       	sbc	r21, r22
     dbc:	c9 0b       	sbc	r28, r25
     dbe:	d0 09       	sbc	r29, r0
     dc0:	c0 f7       	brcc	.-16     	; 0xdb2 <__ftoa_engine+0x10a>
     dc2:	e1 0c       	add	r14, r1
     dc4:	f1 1e       	adc	r15, r17
     dc6:	43 1f       	adc	r20, r19
     dc8:	56 1f       	adc	r21, r22
     dca:	c9 1f       	adc	r28, r25
     dcc:	d0 1d       	adc	r29, r0
     dce:	7e f4       	brtc	.+30     	; 0xdee <__ftoa_engine+0x146>
     dd0:	70 33       	cpi	r23, 0x30	; 48
     dd2:	11 f4       	brne	.+4      	; 0xdd8 <__ftoa_engine+0x130>
     dd4:	8a 95       	dec	r24
     dd6:	e6 cf       	rjmp	.-52     	; 0xda4 <__ftoa_engine+0xfc>
     dd8:	e8 94       	clt
     dda:	01 50       	subi	r16, 0x01	; 1
     ddc:	30 f0       	brcs	.+12     	; 0xdea <__ftoa_engine+0x142>
     dde:	08 0f       	add	r16, r24
     de0:	0a f4       	brpl	.+2      	; 0xde4 <__ftoa_engine+0x13c>
     de2:	00 27       	eor	r16, r16
     de4:	02 17       	cp	r16, r18
     de6:	08 f4       	brcc	.+2      	; 0xdea <__ftoa_engine+0x142>
     de8:	20 2f       	mov	r18, r16
     dea:	23 95       	inc	r18
     dec:	02 2f       	mov	r16, r18
     dee:	7a 33       	cpi	r23, 0x3A	; 58
     df0:	28 f0       	brcs	.+10     	; 0xdfc <__ftoa_engine+0x154>
     df2:	79 e3       	ldi	r23, 0x39	; 57
     df4:	7d 93       	st	X+, r23
     df6:	2a 95       	dec	r18
     df8:	e9 f7       	brne	.-6      	; 0xdf4 <__ftoa_engine+0x14c>
     dfa:	10 c0       	rjmp	.+32     	; 0xe1c <__ftoa_engine+0x174>
     dfc:	7d 93       	st	X+, r23
     dfe:	2a 95       	dec	r18
     e00:	89 f6       	brne	.-94     	; 0xda4 <__ftoa_engine+0xfc>
     e02:	06 94       	lsr	r0
     e04:	97 95       	ror	r25
     e06:	67 95       	ror	r22
     e08:	37 95       	ror	r19
     e0a:	17 95       	ror	r17
     e0c:	17 94       	ror	r1
     e0e:	e1 18       	sub	r14, r1
     e10:	f1 0a       	sbc	r15, r17
     e12:	43 0b       	sbc	r20, r19
     e14:	56 0b       	sbc	r21, r22
     e16:	c9 0b       	sbc	r28, r25
     e18:	d0 09       	sbc	r29, r0
     e1a:	98 f0       	brcs	.+38     	; 0xe42 <__ftoa_engine+0x19a>
     e1c:	23 95       	inc	r18
     e1e:	7e 91       	ld	r23, -X
     e20:	73 95       	inc	r23
     e22:	7a 33       	cpi	r23, 0x3A	; 58
     e24:	08 f0       	brcs	.+2      	; 0xe28 <__ftoa_engine+0x180>
     e26:	70 e3       	ldi	r23, 0x30	; 48
     e28:	7c 93       	st	X, r23
     e2a:	20 13       	cpse	r18, r16
     e2c:	b8 f7       	brcc	.-18     	; 0xe1c <__ftoa_engine+0x174>
     e2e:	7e 91       	ld	r23, -X
     e30:	70 61       	ori	r23, 0x10	; 16
     e32:	7d 93       	st	X+, r23
     e34:	30 f0       	brcs	.+12     	; 0xe42 <__ftoa_engine+0x19a>
     e36:	83 95       	inc	r24
     e38:	71 e3       	ldi	r23, 0x31	; 49
     e3a:	7d 93       	st	X+, r23
     e3c:	70 e3       	ldi	r23, 0x30	; 48
     e3e:	2a 95       	dec	r18
     e40:	e1 f7       	brne	.-8      	; 0xe3a <__ftoa_engine+0x192>
     e42:	11 24       	eor	r1, r1
     e44:	ef 90       	pop	r14
     e46:	ff 90       	pop	r15
     e48:	0f 91       	pop	r16
     e4a:	1f 91       	pop	r17
     e4c:	cf 91       	pop	r28
     e4e:	df 91       	pop	r29
     e50:	99 27       	eor	r25, r25
     e52:	87 fd       	sbrc	r24, 7
     e54:	90 95       	com	r25
     e56:	08 95       	ret

00000e58 <strnlen_P>:
     e58:	fc 01       	movw	r30, r24
     e5a:	05 90       	lpm	r0, Z+
     e5c:	61 50       	subi	r22, 0x01	; 1
     e5e:	70 40       	sbci	r23, 0x00	; 0
     e60:	01 10       	cpse	r0, r1
     e62:	d8 f7       	brcc	.-10     	; 0xe5a <strnlen_P+0x2>
     e64:	80 95       	com	r24
     e66:	90 95       	com	r25
     e68:	8e 0f       	add	r24, r30
     e6a:	9f 1f       	adc	r25, r31
     e6c:	08 95       	ret

00000e6e <strnlen>:
     e6e:	fc 01       	movw	r30, r24
     e70:	61 50       	subi	r22, 0x01	; 1
     e72:	70 40       	sbci	r23, 0x00	; 0
     e74:	01 90       	ld	r0, Z+
     e76:	01 10       	cpse	r0, r1
     e78:	d8 f7       	brcc	.-10     	; 0xe70 <strnlen+0x2>
     e7a:	80 95       	com	r24
     e7c:	90 95       	com	r25
     e7e:	8e 0f       	add	r24, r30
     e80:	9f 1f       	adc	r25, r31
     e82:	08 95       	ret

00000e84 <fputc>:
     e84:	0f 93       	push	r16
     e86:	1f 93       	push	r17
     e88:	cf 93       	push	r28
     e8a:	df 93       	push	r29
     e8c:	fb 01       	movw	r30, r22
     e8e:	23 81       	ldd	r18, Z+3	; 0x03
     e90:	21 fd       	sbrc	r18, 1
     e92:	03 c0       	rjmp	.+6      	; 0xe9a <fputc+0x16>
     e94:	8f ef       	ldi	r24, 0xFF	; 255
     e96:	9f ef       	ldi	r25, 0xFF	; 255
     e98:	2c c0       	rjmp	.+88     	; 0xef2 <fputc+0x6e>
     e9a:	22 ff       	sbrs	r18, 2
     e9c:	16 c0       	rjmp	.+44     	; 0xeca <fputc+0x46>
     e9e:	46 81       	ldd	r20, Z+6	; 0x06
     ea0:	57 81       	ldd	r21, Z+7	; 0x07
     ea2:	24 81       	ldd	r18, Z+4	; 0x04
     ea4:	35 81       	ldd	r19, Z+5	; 0x05
     ea6:	42 17       	cp	r20, r18
     ea8:	53 07       	cpc	r21, r19
     eaa:	44 f4       	brge	.+16     	; 0xebc <fputc+0x38>
     eac:	a0 81       	ld	r26, Z
     eae:	b1 81       	ldd	r27, Z+1	; 0x01
     eb0:	9d 01       	movw	r18, r26
     eb2:	2f 5f       	subi	r18, 0xFF	; 255
     eb4:	3f 4f       	sbci	r19, 0xFF	; 255
     eb6:	31 83       	std	Z+1, r19	; 0x01
     eb8:	20 83       	st	Z, r18
     eba:	8c 93       	st	X, r24
     ebc:	26 81       	ldd	r18, Z+6	; 0x06
     ebe:	37 81       	ldd	r19, Z+7	; 0x07
     ec0:	2f 5f       	subi	r18, 0xFF	; 255
     ec2:	3f 4f       	sbci	r19, 0xFF	; 255
     ec4:	37 83       	std	Z+7, r19	; 0x07
     ec6:	26 83       	std	Z+6, r18	; 0x06
     ec8:	14 c0       	rjmp	.+40     	; 0xef2 <fputc+0x6e>
     eca:	8b 01       	movw	r16, r22
     ecc:	ec 01       	movw	r28, r24
     ece:	fb 01       	movw	r30, r22
     ed0:	00 84       	ldd	r0, Z+8	; 0x08
     ed2:	f1 85       	ldd	r31, Z+9	; 0x09
     ed4:	e0 2d       	mov	r30, r0
     ed6:	09 95       	icall
     ed8:	89 2b       	or	r24, r25
     eda:	e1 f6       	brne	.-72     	; 0xe94 <fputc+0x10>
     edc:	d8 01       	movw	r26, r16
     ede:	16 96       	adiw	r26, 0x06	; 6
     ee0:	8d 91       	ld	r24, X+
     ee2:	9c 91       	ld	r25, X
     ee4:	17 97       	sbiw	r26, 0x07	; 7
     ee6:	01 96       	adiw	r24, 0x01	; 1
     ee8:	17 96       	adiw	r26, 0x07	; 7
     eea:	9c 93       	st	X, r25
     eec:	8e 93       	st	-X, r24
     eee:	16 97       	sbiw	r26, 0x06	; 6
     ef0:	ce 01       	movw	r24, r28
     ef2:	df 91       	pop	r29
     ef4:	cf 91       	pop	r28
     ef6:	1f 91       	pop	r17
     ef8:	0f 91       	pop	r16
     efa:	08 95       	ret

00000efc <printf>:
     efc:	a0 e0       	ldi	r26, 0x00	; 0
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	e4 e8       	ldi	r30, 0x84	; 132
     f02:	f7 e0       	ldi	r31, 0x07	; 7
     f04:	0c 94 2d 06 	jmp	0xc5a	; 0xc5a <__prologue_saves__+0x20>
     f08:	ae 01       	movw	r20, r28
     f0a:	4b 5f       	subi	r20, 0xFB	; 251
     f0c:	5f 4f       	sbci	r21, 0xFF	; 255
     f0e:	fa 01       	movw	r30, r20
     f10:	61 91       	ld	r22, Z+
     f12:	71 91       	ld	r23, Z+
     f14:	af 01       	movw	r20, r30
     f16:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <__iob+0x2>
     f1a:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <__iob+0x3>
     f1e:	0e 94 a0 02 	call	0x540	; 0x540 <vfprintf>
     f22:	e2 e0       	ldi	r30, 0x02	; 2
     f24:	0c 94 49 06 	jmp	0xc92	; 0xc92 <__epilogue_restores__+0x20>

00000f28 <puts>:
     f28:	0f 93       	push	r16
     f2a:	1f 93       	push	r17
     f2c:	cf 93       	push	r28
     f2e:	df 93       	push	r29
     f30:	e0 91 45 01 	lds	r30, 0x0145	; 0x800145 <__iob+0x2>
     f34:	f0 91 46 01 	lds	r31, 0x0146	; 0x800146 <__iob+0x3>
     f38:	23 81       	ldd	r18, Z+3	; 0x03
     f3a:	21 ff       	sbrs	r18, 1
     f3c:	1b c0       	rjmp	.+54     	; 0xf74 <puts+0x4c>
     f3e:	8c 01       	movw	r16, r24
     f40:	d0 e0       	ldi	r29, 0x00	; 0
     f42:	c0 e0       	ldi	r28, 0x00	; 0
     f44:	f8 01       	movw	r30, r16
     f46:	81 91       	ld	r24, Z+
     f48:	8f 01       	movw	r16, r30
     f4a:	60 91 45 01 	lds	r22, 0x0145	; 0x800145 <__iob+0x2>
     f4e:	70 91 46 01 	lds	r23, 0x0146	; 0x800146 <__iob+0x3>
     f52:	db 01       	movw	r26, r22
     f54:	18 96       	adiw	r26, 0x08	; 8
     f56:	ed 91       	ld	r30, X+
     f58:	fc 91       	ld	r31, X
     f5a:	19 97       	sbiw	r26, 0x09	; 9
     f5c:	88 23       	and	r24, r24
     f5e:	31 f0       	breq	.+12     	; 0xf6c <puts+0x44>
     f60:	09 95       	icall
     f62:	89 2b       	or	r24, r25
     f64:	79 f3       	breq	.-34     	; 0xf44 <puts+0x1c>
     f66:	df ef       	ldi	r29, 0xFF	; 255
     f68:	cf ef       	ldi	r28, 0xFF	; 255
     f6a:	ec cf       	rjmp	.-40     	; 0xf44 <puts+0x1c>
     f6c:	8a e0       	ldi	r24, 0x0A	; 10
     f6e:	09 95       	icall
     f70:	89 2b       	or	r24, r25
     f72:	19 f0       	breq	.+6      	; 0xf7a <puts+0x52>
     f74:	8f ef       	ldi	r24, 0xFF	; 255
     f76:	9f ef       	ldi	r25, 0xFF	; 255
     f78:	02 c0       	rjmp	.+4      	; 0xf7e <puts+0x56>
     f7a:	8d 2f       	mov	r24, r29
     f7c:	9c 2f       	mov	r25, r28
     f7e:	df 91       	pop	r29
     f80:	cf 91       	pop	r28
     f82:	1f 91       	pop	r17
     f84:	0f 91       	pop	r16
     f86:	08 95       	ret

00000f88 <sprintf>:
     f88:	ae e0       	ldi	r26, 0x0E	; 14
     f8a:	b0 e0       	ldi	r27, 0x00	; 0
     f8c:	ea ec       	ldi	r30, 0xCA	; 202
     f8e:	f7 e0       	ldi	r31, 0x07	; 7
     f90:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__prologue_saves__+0x1c>
     f94:	0d 89       	ldd	r16, Y+21	; 0x15
     f96:	1e 89       	ldd	r17, Y+22	; 0x16
     f98:	86 e0       	ldi	r24, 0x06	; 6
     f9a:	8c 83       	std	Y+4, r24	; 0x04
     f9c:	1a 83       	std	Y+2, r17	; 0x02
     f9e:	09 83       	std	Y+1, r16	; 0x01
     fa0:	8f ef       	ldi	r24, 0xFF	; 255
     fa2:	9f e7       	ldi	r25, 0x7F	; 127
     fa4:	9e 83       	std	Y+6, r25	; 0x06
     fa6:	8d 83       	std	Y+5, r24	; 0x05
     fa8:	ae 01       	movw	r20, r28
     faa:	47 5e       	subi	r20, 0xE7	; 231
     fac:	5f 4f       	sbci	r21, 0xFF	; 255
     fae:	6f 89       	ldd	r22, Y+23	; 0x17
     fb0:	78 8d       	ldd	r23, Y+24	; 0x18
     fb2:	ce 01       	movw	r24, r28
     fb4:	01 96       	adiw	r24, 0x01	; 1
     fb6:	0e 94 a0 02 	call	0x540	; 0x540 <vfprintf>
     fba:	ef 81       	ldd	r30, Y+7	; 0x07
     fbc:	f8 85       	ldd	r31, Y+8	; 0x08
     fbe:	e0 0f       	add	r30, r16
     fc0:	f1 1f       	adc	r31, r17
     fc2:	10 82       	st	Z, r1
     fc4:	2e 96       	adiw	r28, 0x0e	; 14
     fc6:	e4 e0       	ldi	r30, 0x04	; 4
     fc8:	0c 94 47 06 	jmp	0xc8e	; 0xc8e <__epilogue_restores__+0x1c>

00000fcc <__ultoa_invert>:
     fcc:	fa 01       	movw	r30, r20
     fce:	aa 27       	eor	r26, r26
     fd0:	28 30       	cpi	r18, 0x08	; 8
     fd2:	51 f1       	breq	.+84     	; 0x1028 <__ultoa_invert+0x5c>
     fd4:	20 31       	cpi	r18, 0x10	; 16
     fd6:	81 f1       	breq	.+96     	; 0x1038 <__ultoa_invert+0x6c>
     fd8:	e8 94       	clt
     fda:	6f 93       	push	r22
     fdc:	6e 7f       	andi	r22, 0xFE	; 254
     fde:	6e 5f       	subi	r22, 0xFE	; 254
     fe0:	7f 4f       	sbci	r23, 0xFF	; 255
     fe2:	8f 4f       	sbci	r24, 0xFF	; 255
     fe4:	9f 4f       	sbci	r25, 0xFF	; 255
     fe6:	af 4f       	sbci	r26, 0xFF	; 255
     fe8:	b1 e0       	ldi	r27, 0x01	; 1
     fea:	3e d0       	rcall	.+124    	; 0x1068 <__ultoa_invert+0x9c>
     fec:	b4 e0       	ldi	r27, 0x04	; 4
     fee:	3c d0       	rcall	.+120    	; 0x1068 <__ultoa_invert+0x9c>
     ff0:	67 0f       	add	r22, r23
     ff2:	78 1f       	adc	r23, r24
     ff4:	89 1f       	adc	r24, r25
     ff6:	9a 1f       	adc	r25, r26
     ff8:	a1 1d       	adc	r26, r1
     ffa:	68 0f       	add	r22, r24
     ffc:	79 1f       	adc	r23, r25
     ffe:	8a 1f       	adc	r24, r26
    1000:	91 1d       	adc	r25, r1
    1002:	a1 1d       	adc	r26, r1
    1004:	6a 0f       	add	r22, r26
    1006:	71 1d       	adc	r23, r1
    1008:	81 1d       	adc	r24, r1
    100a:	91 1d       	adc	r25, r1
    100c:	a1 1d       	adc	r26, r1
    100e:	20 d0       	rcall	.+64     	; 0x1050 <__ultoa_invert+0x84>
    1010:	09 f4       	brne	.+2      	; 0x1014 <__ultoa_invert+0x48>
    1012:	68 94       	set
    1014:	3f 91       	pop	r19
    1016:	2a e0       	ldi	r18, 0x0A	; 10
    1018:	26 9f       	mul	r18, r22
    101a:	11 24       	eor	r1, r1
    101c:	30 19       	sub	r19, r0
    101e:	30 5d       	subi	r19, 0xD0	; 208
    1020:	31 93       	st	Z+, r19
    1022:	de f6       	brtc	.-74     	; 0xfda <__ultoa_invert+0xe>
    1024:	cf 01       	movw	r24, r30
    1026:	08 95       	ret
    1028:	46 2f       	mov	r20, r22
    102a:	47 70       	andi	r20, 0x07	; 7
    102c:	40 5d       	subi	r20, 0xD0	; 208
    102e:	41 93       	st	Z+, r20
    1030:	b3 e0       	ldi	r27, 0x03	; 3
    1032:	0f d0       	rcall	.+30     	; 0x1052 <__ultoa_invert+0x86>
    1034:	c9 f7       	brne	.-14     	; 0x1028 <__ultoa_invert+0x5c>
    1036:	f6 cf       	rjmp	.-20     	; 0x1024 <__ultoa_invert+0x58>
    1038:	46 2f       	mov	r20, r22
    103a:	4f 70       	andi	r20, 0x0F	; 15
    103c:	40 5d       	subi	r20, 0xD0	; 208
    103e:	4a 33       	cpi	r20, 0x3A	; 58
    1040:	18 f0       	brcs	.+6      	; 0x1048 <__ultoa_invert+0x7c>
    1042:	49 5d       	subi	r20, 0xD9	; 217
    1044:	31 fd       	sbrc	r19, 1
    1046:	40 52       	subi	r20, 0x20	; 32
    1048:	41 93       	st	Z+, r20
    104a:	02 d0       	rcall	.+4      	; 0x1050 <__ultoa_invert+0x84>
    104c:	a9 f7       	brne	.-22     	; 0x1038 <__ultoa_invert+0x6c>
    104e:	ea cf       	rjmp	.-44     	; 0x1024 <__ultoa_invert+0x58>
    1050:	b4 e0       	ldi	r27, 0x04	; 4
    1052:	a6 95       	lsr	r26
    1054:	97 95       	ror	r25
    1056:	87 95       	ror	r24
    1058:	77 95       	ror	r23
    105a:	67 95       	ror	r22
    105c:	ba 95       	dec	r27
    105e:	c9 f7       	brne	.-14     	; 0x1052 <__ultoa_invert+0x86>
    1060:	00 97       	sbiw	r24, 0x00	; 0
    1062:	61 05       	cpc	r22, r1
    1064:	71 05       	cpc	r23, r1
    1066:	08 95       	ret
    1068:	9b 01       	movw	r18, r22
    106a:	ac 01       	movw	r20, r24
    106c:	0a 2e       	mov	r0, r26
    106e:	06 94       	lsr	r0
    1070:	57 95       	ror	r21
    1072:	47 95       	ror	r20
    1074:	37 95       	ror	r19
    1076:	27 95       	ror	r18
    1078:	ba 95       	dec	r27
    107a:	c9 f7       	brne	.-14     	; 0x106e <__ultoa_invert+0xa2>
    107c:	62 0f       	add	r22, r18
    107e:	73 1f       	adc	r23, r19
    1080:	84 1f       	adc	r24, r20
    1082:	95 1f       	adc	r25, r21
    1084:	a0 1d       	adc	r26, r0
    1086:	08 95       	ret

00001088 <_exit>:
    1088:	f8 94       	cli

0000108a <__stop_program>:
    108a:	ff cf       	rjmp	.-2      	; 0x108a <__stop_program>
